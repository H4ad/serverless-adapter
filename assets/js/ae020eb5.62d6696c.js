"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4483],{2655:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=n(5893),s=n(1151);const i={title:"Customizing",position:2,description:"See more about how to customize this library."},o=void 0,a={id:"main/getting-started/customizing",title:"Customizing",description:"See more about how to customize this library.",source:"@site/docs/main/getting-started/customizing.mdx",sourceDirName:"main/getting-started",slug:"/main/getting-started/customizing",permalink:"/docs/main/getting-started/customizing",draft:!1,unlisted:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/main/getting-started/customizing.mdx",tags:[],version:"current",frontMatter:{title:"Customizing",position:2,description:"See more about how to customize this library."},sidebar:"main",previous:{title:"Usage",permalink:"/docs/main/getting-started/usage"},next:{title:"Examples",permalink:"/docs/main/getting-started/examples"}},d={},l=[{value:"setHandler",id:"sethandler",level:3},{value:"setResolver",id:"setresolver",level:3},{value:"setFramework",id:"setframework",level:3},{value:"setLogger",id:"setlogger",level:3},{value:"setBinarySettings",id:"setbinarysettings",level:3},{value:"setRespondWithErrors",id:"setrespondwitherrors",level:2},{value:"addAdapter",id:"addadapter",level:2}];function h(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"With the instance of adapter, we have some options:"}),"\n",(0,r.jsx)(t.h3,{id:"sethandler",children:"setHandler"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"Calling this method more than once throws an error."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Defines the handler that will get the event, context and callback and pass it to the adapter and framework."}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsxs)(t.p,{children:["See supported handlers in ",(0,r.jsx)(t.a,{href:"/docs/main/handlers/default",children:"Handlers Section"}),")"]})}),"\n",(0,r.jsx)(t.h3,{id:"setresolver",children:"setResolver"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"Calling this method more than once throws an error."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Defines the resolver that aims to resolve the response to serverless and stop its execution when the request ends."}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsxs)(t.p,{children:["See supported resolvers in ",(0,r.jsx)(t.a,{href:"/docs/main/resolvers/promise",children:"Resolvers Section"}),")"]})}),"\n",(0,r.jsx)(t.h3,{id:"setframework",children:"setFramework"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"Calling this method more than once throws an error."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Defines the framework that will process requests."}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsxs)(t.p,{children:["See supported frameworks in ",(0,r.jsx)(t.a,{href:"/docs/main/frameworks/nestjs",children:"Frameworks Section"}),")"]})}),"\n",(0,r.jsx)(t.h3,{id:"setlogger",children:"setLogger"}),"\n",(0,r.jsx)(t.p,{children:"Defines the logger service used during the execution of the handler"}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsxs)(t.p,{children:["To know how to implement, see the ",(0,r.jsx)(t.a,{href:"../../api/Core/Logger/ILogger",children:"Logger Interface"})," in API section."]})}),"\n",(0,r.jsx)(t.h3,{id:"setbinarysettings",children:"setBinarySettings"}),"\n",(0,r.jsx)(t.p,{children:"Defines the binary settings for whether the response should be treated as binary or not."}),"\n",(0,r.jsxs)(t.p,{children:["When you call this method, you need to pass the interface ",(0,r.jsx)(t.a,{href:"../../api/Types/BinarySettings",children:"BinarySettings"}),", and you have two options:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Send an function called ",(0,r.jsx)(t.code,{children:"isBinary"})," to verify looking inside the headers if the response should be treated as binary."]}),"\n",(0,r.jsxs)(t.li,{children:["Or send the specific ",(0,r.jsx)(t.code,{children:"contentTypes"})," and ",(0,r.jsx)(t.code,{children:"contentEncodings"})," that should be treated as binary."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"After that, your adapter needs to handle the binary data, it will deal correctly because they know which responses are encoded in binary."}),"\n",(0,r.jsxs)(t.p,{children:["Not every adapter deals with binary but if you used adapters like ",(0,r.jsx)(t.a,{href:"../adapters/aws/api-gateway-v1",children:"ApiGatewayV1"})," or ",(0,r.jsx)(t.a,{href:"../adapters/aws/api-gateway-v2",children:"ApiGatewayV2"}),",\r\nyou should be aware of this configuration."]}),"\n",(0,r.jsxs)(t.p,{children:["By default, the library already handles some common cases like ",(0,r.jsx)(t.a,{href:"../../api/Core/Constants/DEFAULT_BINARY_CONTENT_TYPES",children:"DEFAULT_BINARY_CONTENT_TYPES"})," for ",(0,r.jsx)(t.code,{children:"contentTypes"}),"\r\nand ",(0,r.jsx)(t.a,{href:"../../api/Core/Constants/DEFAULT_BINARY_ENCODINGS",children:"DEFAULT_BINARY_ENCODINGS"})," for ",(0,r.jsx)(t.code,{children:"contentEncodings"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"setrespondwitherrors",children:"setRespondWithErrors"}),"\n",(0,r.jsxs)(t.p,{children:["Defines the ",(0,r.jsx)(t.code,{children:"responseWithErrors"}),", a property that indicates whether the error stack should be included in the response or not"]}),"\n",(0,r.jsx)(t.p,{children:"The errors this option will usually handle are errors during forwarding to your framework, eg: when your framework throws error 500 from a middleware error."}),"\n",(0,r.jsxs)(t.p,{children:["By default, this option will be ",(0,r.jsx)(t.code,{children:"true"})," only when the ",(0,r.jsx)(t.code,{children:"NODE_ENV"})," is equal to ",(0,r.jsx)(t.code,{children:"development"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"addadapter",children:"addAdapter"}),"\n",(0,r.jsx)(t.p,{children:"Add an adapter to the adapters list to handle the event coming from any serverless event source."}),"\n",(0,r.jsx)(t.p,{children:"You can call this method multiple times to add support for whatever event source you want."}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsxs)(t.p,{children:["To know which adapters you can use, see the ",(0,r.jsx)(t.a,{href:"/docs/main/adapters/introduction",children:"Adapters"}),") section."]})})]})}function c(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>o});var r=n(7294);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);