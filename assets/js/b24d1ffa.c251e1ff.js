"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9413],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>E});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",T={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(r),d=a,E=u["".concat(s,".").concat(d)]||u[d]||T[d]||o;return r?n.createElement(E,i(i({ref:t},l),{},{components:r})):n.createElement(E,i({ref:t},l))}));function E(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5843:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>T,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={},i=void 0,p={unversionedId:"api/Core/Constants/DEFAULT_BINARY_CONTENT_TYPES",id:"api/Core/Constants/DEFAULT_BINARY_CONTENT_TYPES",title:"DEFAULT_BINARY_CONTENT_TYPES",description:"@h4ad/serverless-adapter &gt; DEFAULT\\BINARY\\CONTENT\\TYPES",source:"@site/docs/api/Core/Constants/DEFAULT_BINARY_CONTENT_TYPES.md",sourceDirName:"api/Core/Constants",slug:"/api/Core/Constants/DEFAULT_BINARY_CONTENT_TYPES",permalink:"/docs/api/Core/Constants/DEFAULT_BINARY_CONTENT_TYPES",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Core/Constants/DEFAULT_BINARY_CONTENT_TYPES.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"BaseHandler",permalink:"/docs/api/Core/BaseHandler"},next:{title:"DEFAULT_BINARY_ENCODINGS",permalink:"/docs/api/Core/Constants/DEFAULT_BINARY_ENCODINGS"}},s={},c=[{value:"(variable) DEFAULT_BINARY_CONTENT_TYPES",id:"variable-default_binary_content_types",level:2}],l={toc:c},u="wrapper";function T(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/api/Introduction"},"@h4ad/serverless-adapter")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/Core/Constants/DEFAULT_BINARY_CONTENT_TYPES"},"DEFAULT","_","BINARY","_","CONTENT","_","TYPES")),(0,a.kt)("h2",{id:"variable-default_binary_content_types"},"(variable) DEFAULT","_","BINARY","_","CONTENT","_","TYPES"),(0,a.kt)("p",null,"Default content types that are treated as binary, they are compared with the ",(0,a.kt)("inlineCode",{parentName:"p"},"Content-Type")," header."),(0,a.kt)("p",null,"Signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"DEFAULT_BINARY_CONTENT_TYPES: (string | RegExp)[]\n")))}T.isMDXComponent=!0}}]);