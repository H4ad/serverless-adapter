"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3823],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>v});var s=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);r&&(s=s.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,s)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,s,n=function(e,r){if(null==e)return{};var t,s,n={},a=Object.keys(e);for(s=0;s<a.length;s++)t=a[s],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)t=a[s],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=s.createContext({}),i=function(e){var r=s.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=i(e.components);return s.createElement(p.Provider,{value:r},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return s.createElement(s.Fragment,{},r)}},d=s.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=i(t),d=n,v=m["".concat(p,".").concat(d)]||m[d]||u[d]||a;return t?s.createElement(v,o(o({ref:r},c),{},{components:t})):s.createElement(v,o({ref:r},c))}));function v(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[m]="string"==typeof e?e:n,o[1]=l;for(var i=2;i<a;i++)o[i]=t[i];return s.createElement.apply(null,o)}return s.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3527:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>i});var s=t(7462),n=(t(7294),t(3905));const a={},o=void 0,l={unversionedId:"api/Network/ServerlessStreamResponse/ServerlessStreamResponse",id:"api/Network/ServerlessStreamResponse/ServerlessStreamResponse",title:"ServerlessStreamResponse",description:"@h4ad/serverless-adapter &gt; ServerlessStreamResponse",source:"@site/docs/api/Network/ServerlessStreamResponse/ServerlessStreamResponse.md",sourceDirName:"api/Network/ServerlessStreamResponse",slug:"/api/Network/ServerlessStreamResponse/",permalink:"/docs/api/Network/ServerlessStreamResponse/",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Network/ServerlessStreamResponse/ServerlessStreamResponse.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"ServerlessResponseProps",permalink:"/docs/api/Network/ServerlessResponse/ServerlessResponseProps"},next:{title:"ServerlessStreamResponseProps",permalink:"/docs/api/Network/ServerlessStreamResponse/ServerlessStreamResponseProps"}},p={},i=[{value:"(class) ServerlessStreamResponse",id:"class-serverlessstreamresponse",level:2},{value:"(constructor)",id:"constructor",level:2},{value:"Parameters",id:"parameters",level:3}],c={toc:i},m="wrapper";function u(e){let{components:r,...t}=e;return(0,n.kt)(m,(0,s.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/api/Introduction"},"@h4ad/serverless-adapter")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/Network/ServerlessStreamResponse"},"ServerlessStreamResponse")),(0,n.kt)("h2",{id:"class-serverlessstreamresponse"},"(class) ServerlessStreamResponse"),(0,n.kt)("p",null,"The class that represents a response instance used to send to the framework and wait until the framework finishes processing the request. This response is specially built to deal with transfer-encoding: chunked"),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare class ServerlessStreamResponse extends ServerResponse \n")),(0,n.kt)("p",null,"Extends: ServerResponse"),(0,n.kt)("h2",{id:"constructor"},"(constructor)"),(0,n.kt)("p",null,"Constructs a new instance of the ",(0,n.kt)("inlineCode",{parentName:"p"},"ServerlessStreamResponse")," class"),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"constructor({ method, onReceiveHeaders, log, }: ServerlessStreamResponseProps);\n")),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"{ method, onReceiveHeaders, log, }"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/Network/ServerlessStreamResponse/ServerlessStreamResponseProps"},"ServerlessStreamResponseProps")),(0,n.kt)("td",{parentName:"tr",align:null})))))}u.isMDXComponent=!0}}]);