"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6869],{928:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var n=t(4848),o=t(8453);const s={title:"Deepkit",description:"See more about how to integrate with deepkit."},i=void 0,a={id:"main/frameworks/deepkit",title:"Deepkit",description:"See more about how to integrate with deepkit.",source:"@site/docs/main/frameworks/deepkit.mdx",sourceDirName:"main/frameworks",slug:"/main/frameworks/deepkit",permalink:"/docs/main/frameworks/deepkit",draft:!1,unlisted:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/main/frameworks/deepkit.mdx",tags:[],version:"current",frontMatter:{title:"Deepkit",description:"See more about how to integrate with deepkit."},sidebar:"main",previous:{title:"Apollo Server",permalink:"/docs/main/frameworks/apollo-server"},next:{title:"Express",permalink:"/docs/main/frameworks/express"}},d={},l=[{value:"About AWS",id:"about-aws",level:2},{value:"FAQ",id:"faq",level:3},{value:"ERR_DLOPEN_FAILED",id:"err_dlopen_failed",level:3},{value:"ENOENT",id:"enoent",level:3}];function p(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsx)(r.p,{children:"The following examples only work with deepkit over HTTP, you cannot use this framework to support websocket or rpc."})}),"\n",(0,n.jsx)(r.p,{children:"First, you need to ensure you have the libs installed, so run this code:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"npm i --save @deepkit/app @deepkit/core @deepkit/framework @deepkit/http @deepkit/type @deepkit/type-compiler\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Then, you need you just need to use the ",(0,n.jsx)(r.a,{href:"../../api/Frameworks/HttpDeepkitFramework",children:"HttpDeepkitFramework"})," when you create your adapter, like:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",metastring:'title="index.ts"',children:"import { App } from '@deepkit/app';\r\nimport { FrameworkModule } from '@deepkit/framework';\r\nimport { HtmlResponse, HttpKernel, HttpModule, HttpRouterRegistry } from '@deepkit/http';\r\nimport { ServerlessAdapter } from '@h4ad/serverless-adapter';\r\nimport { HttpDeepkitFramework } from '@h4ad/serverless-adapter/frameworks/deepkit';\r\n\r\nconst app = new App({\r\n  controllers: [],\r\n  module: [\r\n    new HttpModule(),\r\n    new FrameworkModule()\r\n  ],\r\n});\r\n\r\nconst router = app.get(HttpRouterRegistry);\r\n\r\nrouter.get('/', () => {\r\n  return new HtmlResponse('<h1>Sample in Deepkit Project</h1>');\r\n});\r\n\r\nconst httpKernel = app.get(HttpKernel);\r\n\r\nexport const handler = ServerlessAdapter.new(httpKernel)\r\n  .setFramework(new HttpDeepkitFramework())\r\n  // .setHandler(new DefaultHandler())\r\n  // .setResolver(new PromiseResolver())\r\n  // .addAdapter(new AlbAdapter())\r\n  // .addAdapter(new SQSAdapter())\r\n  // .addAdapter(new SNSAdapter())\r\n  // after put all methods necessary, just call the build method.\r\n  .build();\n"})}),"\n",(0,n.jsx)(r.admonition,{type:"tip",children:(0,n.jsxs)(r.p,{children:["Need more examples? See more examples ",(0,n.jsx)(r.a,{href:"https://github.com/H4ad/serverless-adapter-examples#deepkit",children:"here"}),"."]})}),"\n",(0,n.jsx)(r.admonition,{type:"tip",children:(0,n.jsxs)(r.p,{children:["Is your application instance creation asynchronous? Look the ",(0,n.jsx)(r.a,{href:"./helpers/lazy",children:"LazyFramework"})," which helps you in asynchronous startup."]})}),"\n",(0,n.jsx)(r.h2,{id:"about-aws",children:"About AWS"}),"\n",(0,n.jsxs)(r.p,{children:["I was only able to get Deepkit working when you deploy using NodeJS 16.x and using the ",(0,n.jsx)(r.code,{children:"x86_64"})," architecture."]}),"\n",(0,n.jsxs)(r.p,{children:["Also, I tried using the ",(0,n.jsx)(r.code,{children:"serverless-offline"})," package and it throws an error about ",(0,n.jsx)(r.code,{children:"could not find handler"}),", not sure why\r\nI changed the deployment configuration to upload code manually. So if you like to use ",(0,n.jsx)(r.code,{children:"serverless framework"}),", know\r\nthat you will have problems trying to test locally."]}),"\n",(0,n.jsx)(r.h3,{id:"faq",children:"FAQ"}),"\n",(0,n.jsx)(r.h3,{id:"err_dlopen_failed",children:"ERR_DLOPEN_FAILED"}),"\n",(0,n.jsxs)(r.p,{children:["Error message: /var/task/node_modules/turbo-net/build/Release/turbo_net.node: cannot open shared object file: No such file or directory\r\nSolution: Change your lambda architecture to ",(0,n.jsx)(r.code,{children:"x86_64"}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"enoent",children:"ENOENT"}),"\n",(0,n.jsx)(r.p,{children:"Error message: no such file or directory, mkdir 'var/debug/'\r\nSolution:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"// change these options\r\nnew HttpModule({ debug: true }),\r\nnew FrameworkModule({ debug: true, httpLog: true }),\r\n// for\r\nnew HttpModule({ debug: false }),\r\nnew FrameworkModule({ debug: false, httpLog: false }),\n"})}),"\n",(0,n.jsx)(r.admonition,{type:"tip",children:(0,n.jsxs)(r.p,{children:["Need to deal with CORS? See ",(0,n.jsx)(r.a,{href:"./helpers/cors",children:"CorsFramework"})," which helps you to add correct headers."]})})]})}function c(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>a});var n=t(6540);const o={},s=n.createContext(o);function i(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);