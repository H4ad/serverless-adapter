"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3778],{5342:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var t=r(4848),n=r(8453);const a={},d=void 0,i={id:"api/Handlers/Base/RawRequest/RawRequest",title:"RawRequest",description:"@h4ad/serverless-adapter &gt; RawRequest",source:"@site/docs/api/Handlers/Base/RawRequest/RawRequest.md",sourceDirName:"api/Handlers/Base/RawRequest",slug:"/api/Handlers/Base/RawRequest/",permalink:"/docs/api/Handlers/Base/RawRequest/",draft:!1,unlisted:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Handlers/Base/RawRequest/RawRequest.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"AzureHandlerOptions",permalink:"/docs/api/Handlers/AzureHandler/AzureHandlerOptions"},next:{title:"DefaultHandler",permalink:"/docs/api/Handlers/DefaultHandler/"}},c={},l=[{value:"(class) RawRequest",id:"class-rawrequest",level:2},{value:"(method) getRequestFromExpressRequest",id:"method-getrequestfromexpressrequest",level:2},{value:"Parameters",id:"parameters",level:3},{value:"(method) onRequestCallback",id:"method-onrequestcallback",level:2},{value:"Parameters",id:"parameters-1",level:3}];function o(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/docs/api/Introduction",children:"@h4ad/serverless-adapter"})," > ",(0,t.jsx)(s.a,{href:"/docs/api/Handlers/Base/RawRequest",children:"RawRequest"})]}),"\n",(0,t.jsx)(s.h2,{id:"class-rawrequest",children:"(class) RawRequest"}),"\n",(0,t.jsx)(s.p,{children:"The class that expose some methods to be used to get raw request from Express HTTP Request"}),"\n",(0,t.jsx)(s.p,{children:"Signature:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"export declare abstract class RawRequest<TApp> \n"})}),"\n",(0,t.jsx)(s.h2,{id:"method-getrequestfromexpressrequest",children:"(method) getRequestFromExpressRequest"}),"\n",(0,t.jsxs)(s.p,{children:["Not sure why they think using Express instance with prebuilt middlewares was a good idea, but Firebase/GCP decides to use ",(0,t.jsx)(s.code,{children:"Express"})," and ",(0,t.jsx)(s.code,{children:"body-parser"})," by default, so you don't get a raw request, instead, you get a modified version by Express and also with the body parsed by ",(0,t.jsx)(s.code,{children:"body-parser"})," . If you use NestJS or Express it's awesome, but for the rest of the frameworks it's terrible! That's why I have this method, just to try and create a raw request to be used and passed to the frameworks so they can handle the request as if they received the request from the native http module."]}),"\n",(0,t.jsx)(s.p,{children:"Signature:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"protected getRequestFromExpressRequest(request: IncomingMessage): ServerlessRequest;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsx)("thead",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:(0,t.jsx)(s.p,{children:"Parameter"})}),(0,t.jsx)("th",{children:(0,t.jsx)(s.p,{children:"Type"})}),(0,t.jsx)("th",{children:(0,t.jsx)(s.p,{children:"Description"})})]})}),(0,t.jsx)("tbody",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:"request"})}),(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:"IncomingMessage"})}),(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:"The Express request"})})]})})]}),"\n",(0,t.jsx)(s.p,{children:"Returns:"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"/docs/api/Network/ServerlessRequest",children:"ServerlessRequest"})}),"\n",(0,t.jsx)(s.h2,{id:"method-onrequestcallback",children:"(method) onRequestCallback"}),"\n",(0,t.jsx)(s.p,{children:"The callback to when receive some request from external source"}),"\n",(0,t.jsx)(s.p,{children:"Signature:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"protected onRequestCallback(app: TApp, framework: FrameworkContract<TApp>): (req: IncomingMessage, res: ServerResponse) => void | Promise<void>;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsx)("thead",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:(0,t.jsx)(s.p,{children:"Parameter"})}),(0,t.jsx)("th",{children:(0,t.jsx)(s.p,{children:"Type"})}),(0,t.jsx)("th",{children:(0,t.jsx)(s.p,{children:"Description"})})]})}),(0,t.jsxs)("tbody",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:"app"})}),(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:"TApp"})}),(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:"The instance of the app"})})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:"framework"})}),(0,t.jsx)("td",{children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/docs/api/Contracts/FrameworkContract",children:"FrameworkContract"})," <TApp>"]})}),(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:"The framework for the app"})})]})]})]}),"\n",(0,t.jsx)(s.p,{children:"Returns:"}),"\n",(0,t.jsx)(s.p,{children:"(req: IncomingMessage, res: ServerResponse) => void | Promise<void>"})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>d,x:()=>i});var t=r(6540);const n={},a=t.createContext(n);function d(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);