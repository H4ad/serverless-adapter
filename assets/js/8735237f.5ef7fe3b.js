"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4053],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>d});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=n.createContext({}),l=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(p.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=l(t),d=o,h=u["".concat(p,".").concat(d)]||u[d]||m[d]||a;return t?n.createElement(h,s(s({ref:r},c),{},{components:t})):n.createElement(h,s({ref:r},c))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=u;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2071:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const a={title:"CORS",description:"See more about how to deal with CORS in serverless."},s=void 0,i={unversionedId:"main/frameworks/helpers/cors",id:"main/frameworks/helpers/cors",title:"CORS",description:"See more about how to deal with CORS in serverless.",source:"@site/docs/main/frameworks/helpers/cors.mdx",sourceDirName:"main/frameworks/helpers",slug:"/main/frameworks/helpers/cors",permalink:"/docs/main/frameworks/helpers/cors",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/main/frameworks/helpers/cors.mdx",tags:[],version:"current",frontMatter:{title:"CORS",description:"See more about how to deal with CORS in serverless."},sidebar:"main",previous:{title:"Body Parser",permalink:"/docs/main/frameworks/helpers/body-parser"},next:{title:"Lazy",permalink:"/docs/main/frameworks/helpers/lazy"}},p={},l=[{value:"Why?",id:"why",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2}],c={toc:l};function m(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This framework is a helper framework that wraps around another framework and gets some options to configure CORS in your app using the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/expressjs/cors"},"cors")," library behind the scenes."),(0,o.kt)("h2",{id:"why"},"Why?"),(0,o.kt)("p",null,"Why should I use this framework instead of directly using my framework/application's ",(0,o.kt)("inlineCode",{parentName:"p"},"joe-doe-cors")," package?"),(0,o.kt)("p",null,"Using this framework, you can skip the ",(0,o.kt)("inlineCode",{parentName:"p"},"request")," to your framework, so it's faster to handle it directly in the library instead of leaving it\nto your frame."),(0,o.kt)("p",null,"Also, frameworks like ",(0,o.kt)("inlineCode",{parentName:"p"},"trpc"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"deep\u1e31it")," and other frameworks don't have a good way of dealing with CORS, so with ",(0,o.kt)("inlineCode",{parentName:"p"},"CorsFramework")," you can do the CORS\nworks for these frameworks."),(0,o.kt)("p",null,"Finally, I added an optimization, inspired by ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/primus/access-control/blob/master/index.js#L95-L115"},"access control"),", which returns the Forbidden error when the origin is invalid\nor when the method is not allowed. In other packages, like ",(0,o.kt)("inlineCode",{parentName:"p"},"fastify/cors"),", the ",(0,o.kt)("inlineCode",{parentName:"p"},"cors")," itself used by this library and ",(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/57212248/why-is-http-request-been-processed-in-action-even-when-cors-is-not-enabled"},"even other languages"),",\nthey process the request if the origin is invalid and to me it sounds like a waste of resources, so we can just return the error to the user instead of processing the request which is sure to return the error in the user's browser."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"If you want to disable this behaviour, set ",(0,o.kt)("inlineCode",{parentName:"p"},"{ forbiddenOnInvalidOriginOrMethod: false }")," in the options.")),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("p",null,"To be able to use, first you need to install some packages:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i --save cors\n")),(0,o.kt)("p",null,"If you are using TypeScript:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i --save-dev @types/cors\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"The first parameter is the instance of another framework, so if you want to use ",(0,o.kt)("a",{parentName:"p",href:"../express"},"Express")," for example, you can just use like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { ServerlessAdapter } from '@h4ad/serverless-adapter';\nimport { CorsFramework, CorsFrameworkOptions } from '@h4ad/serverless-adapter/lib/frameworks/cors';\nimport { ExpressFramework } from '@h4ad/serverless-adapter/lib/frameworks/express';\n\nconst express = require('express');\n\nconst expressFramework = new ExpressFramework();\n// see docs about the options in the original package:\n// https://github.com/expressjs/cors\nconst options: CorsFrameworkOptions = { origin: '*' };\nconst framework = new CorsFramework(expressFramework, options);\n\nexport const handler = ServerlessAdapter.new(express)\n  .setFramework(framework)\n  // continue to set the other options here.\n  //.setHandler(new DefaultHandler())\n  //.setResolver(new PromiseResolver())\n  //.addAdapter(new AlbAdapter())\n  //.addAdapter(new SQSAdapter())\n  //.addAdapter(new SNSAdapter())\n  // after put all methods necessary, just call the build method.\n  .build();\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Is your application instance creation asynchronous? Look the ",(0,o.kt)("a",{parentName:"p",href:"./lazy"},"LazyFramework")," which helps you in asynchronous startup.")))}m.isMDXComponent=!0}}]);