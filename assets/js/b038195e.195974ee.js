"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9535],{3905:(t,e,r)=>{r.d(e,{Zo:()=>u,kt:()=>d});var a=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function p(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},i=Object.keys(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var l=a.createContext({}),s=function(t){var e=a.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):p(p({},e),t)),r},u=function(t){var e=s(t.components);return a.createElement(l.Provider,{value:e},t.children)},c="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},g=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,i=t.originalType,l=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),c=s(r),g=n,d=c["".concat(l,".").concat(g)]||c[g]||m[g]||i;return r?a.createElement(d,p(p({ref:e},u),{},{components:r})):a.createElement(d,p({ref:e},u))}));function d(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=r.length,p=new Array(i);p[0]=g;var o={};for(var l in e)hasOwnProperty.call(e,l)&&(o[l]=e[l]);o.originalType=t,o[c]="string"==typeof t?t:n,p[1]=o;for(var s=2;s<i;s++)p[s]=r[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},9405:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>p,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const i={},p=void 0,o={unversionedId:"api/Core/Path/getPathWithQueryStringParams",id:"api/Core/Path/getPathWithQueryStringParams",title:"getPathWithQueryStringParams",description:"@h4ad/serverless-adapter &gt; getPathWithQueryStringParams",source:"@site/docs/api/Core/Path/getPathWithQueryStringParams.md",sourceDirName:"api/Core/Path",slug:"/api/Core/Path/getPathWithQueryStringParams",permalink:"/docs/api/Core/Path/getPathWithQueryStringParams",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Core/Path/getPathWithQueryStringParams.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"buildStripBasePath",permalink:"/docs/api/Core/Path/buildStripBasePath"},next:{title:"getQueryParamsStringFromRecord",permalink:"/docs/api/Core/Path/getQueryParamsStringFromRecord"}},l={},s=[{value:"(function) getPathWithQueryStringParams",id:"function-getpathwithquerystringparams",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:2}],u={toc:s},c="wrapper";function m(t){let{components:e,...r}=t;return(0,n.kt)(c,(0,a.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/api/Introduction"},"@h4ad/serverless-adapter")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/Core/Path/getPathWithQueryStringParams"},"getPathWithQueryStringParams")),(0,n.kt)("h2",{id:"function-getpathwithquerystringparams"},"(function) getPathWithQueryStringParams"),(0,n.kt)("p",null,"Transform the path and a map of query params to a string with formatted query params"),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare function getPathWithQueryStringParams(path: string, queryParams: string | Record<string, string | string[] | undefined> | undefined | null): string;\n")),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"path"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"The path")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"queryParams"),(0,n.kt)("td",{parentName:"tr",align:null},"string ","|"," Record","<","string, string ","|"," string","[","]"," ","|"," undefined",">"," ","|"," undefined ","|"," null"),(0,n.kt)("td",{parentName:"tr",align:null},"The query params")))),(0,n.kt)("p",null,"Returns:"),(0,n.kt)("p",null,"string"),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"const path = '/pets/search';\nconst queryParams = { batata: undefined, petType: [ 'dog', 'fish' ] };\nconst result = getPathWithQueryStringParams(path, queryParams);\nconsole.log(result);\n// /pets/search?batata=&petType=dog&petType=fish\n")))}m.isMDXComponent=!0}}]);