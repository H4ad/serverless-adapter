"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3715],{2629:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=r(4848),t=r(8453);const s={title:"Api Gateway V2",description:"See more about how to integrate with AWS API Gateway V2."},i=void 0,o={id:"main/adapters/aws/api-gateway-v2",title:"Api Gateway V2",description:"See more about how to integrate with AWS API Gateway V2.",source:"@site/docs/main/adapters/aws/api-gateway-v2.mdx",sourceDirName:"main/adapters/aws",slug:"/main/adapters/aws/api-gateway-v2",permalink:"/docs/main/adapters/aws/api-gateway-v2",draft:!1,unlisted:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/main/adapters/aws/api-gateway-v2.mdx",tags:[],version:"current",frontMatter:{title:"Api Gateway V2",description:"See more about how to integrate with AWS API Gateway V2."},sidebar:"main",previous:{title:"Api Gateway V1",permalink:"/docs/main/adapters/aws/api-gateway-v1"},next:{title:"DynamoDB",permalink:"/docs/main/adapters/aws/dynamodb"}},d={},l=[{value:"About the adapter",id:"about-the-adapter",level:2},{value:"Customizing",id:"customizing",level:2},{value:"Usage",id:"usage",level:2},{value:"Transfer Encoding Chunked",id:"transfer-encoding-chunked",level:3}];function c(e){const a={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.p,{children:["The adapter to handle requests from ",(0,n.jsx)(a.a,{href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html",children:"AWS Api Gateway V2"}),"\r\nand from ",(0,n.jsx)(a.a,{href:"https://docs.aws.amazon.com/lambda/latest/dg/lambda-urls.html",children:"AWS Lambda Function URLs"}),"."]}),"\n",(0,n.jsx)(a.admonition,{type:"info",children:(0,n.jsxs)(a.p,{children:["When an error is thrown during forwarding and the ",(0,n.jsx)(a.code,{children:"responseWithErrors"})," option is ",(0,n.jsx)(a.code,{children:"true"}),", we return a 500 status WITH error stack in the response."]})}),"\n",(0,n.jsx)(a.admonition,{title:"Reducing Costs",type:"tip",children:(0,n.jsxs)(a.p,{children:["Not sure when to use AWS ALB instead of API Gateway? See ",(0,n.jsx)(a.a,{href:"https://serverless-training.com/articles/save-money-by-replaceing-api-gateway-with-application-load-balancer/",children:"this article"})," from Serverless Training to learn more."]})}),"\n",(0,n.jsx)(a.h2,{id:"about-the-adapter",children:"About the adapter"}),"\n",(0,n.jsx)(a.p,{children:"This adapter transforms every request coming from API Gateway V2 into an HTTP request to your framework."}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-json",metastring:'title="api-gateway-v2-event-example.json"',children:'{\r\n  "version": "2.0",\r\n  "routeKey": "$default",\r\n  "rawPath": "/my/path",\r\n  "rawQueryString": "parameter1=value1&parameter1=value2&parameter2=value",\r\n  "cookies": [\r\n    "cookie1",\r\n    "cookie2"\r\n  ],\r\n  "headers": {\r\n    "header1": "value1",\r\n    "header2": "value1,value2"\r\n  },\r\n  "queryStringParameters": {\r\n    "parameter1": "value1,value2",\r\n    "parameter2": "value"\r\n  },\r\n  "requestContext": {\r\n    "accountId": "123456789012",\r\n    "apiId": "api-id",\r\n    "authentication": {\r\n      "clientCert": {\r\n        "clientCertPem": "CERT_CONTENT",\r\n        "subjectDN": "www.example.com",\r\n        "issuerDN": "Example issuer",\r\n        "serialNumber": "a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1",\r\n        "validity": {\r\n          "notBefore": "May 28 12:30:02 2019 GMT",\r\n          "notAfter": "Aug  5 09:36:04 2021 GMT"\r\n        }\r\n      }\r\n    },\r\n    "authorizer": {\r\n      "jwt": {\r\n        "claims": {\r\n          "claim1": "value1",\r\n          "claim2": "value2"\r\n        },\r\n        "scopes": [\r\n          "scope1",\r\n          "scope2"\r\n        ]\r\n      }\r\n    },\r\n    "domainName": "id.execute-api.us-east-1.amazonaws.com",\r\n    "domainPrefix": "id",\r\n    "http": {\r\n      "method": "POST",\r\n      "path": "/my/path",\r\n      "protocol": "HTTP/1.1",\r\n      "sourceIp": "IP",\r\n      "userAgent": "agent"\r\n    },\r\n    "requestId": "id",\r\n    "routeKey": "$default",\r\n    "stage": "$default",\r\n    "time": "12/Mar/2020:19:03:58 +0000",\r\n    "timeEpoch": 1583348638390\r\n  },\r\n  "body": "Hello from Lambda",\r\n  "pathParameters": {\r\n    "parameter1": "value1"\r\n  },\r\n  "isBase64Encoded": false,\r\n  "stageVariables": {\r\n    "stageVariable1": "value1",\r\n    "stageVariable2": "value2"\r\n  }\r\n}\n'})}),"\n",(0,n.jsxs)(a.p,{children:["So, to add support to the above request, we must have registered the ",(0,n.jsx)(a.code,{children:"/my/path"})," route as ",(0,n.jsx)(a.code,{children:"POST"})," and when API Gateway sends this event, you will get:"]}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"body"}),": ",(0,n.jsx)(a.code,{children:"Hello from Lambda"})]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"queryString"}),": ",(0,n.jsx)(a.code,{children:"parameter1=value1&parameter1=value2&parameter2=value"})]}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"customizing",children:"Customizing"}),"\n",(0,n.jsxs)(a.p,{children:["You can strip base path with the option ",(0,n.jsx)(a.code,{children:"stripBasePath"})," inside ",(0,n.jsx)(a.a,{href:"/docs/api/Adapters/AWS/ApiGatewayV2Adapter/ApiGatewayV2Options",children:"ApiGatewayV2Options"}),"."]}),"\n",(0,n.jsx)(a.admonition,{type:"caution",children:(0,n.jsxs)(a.p,{children:["When you configure your API with some ",(0,n.jsx)(a.code,{children:"basePath"})," like ",(0,n.jsx)(a.code,{children:"/prod"}),", you should either send the request in the path ",(0,n.jsx)(a.code,{children:"/prod/my/path"})," or set ",(0,n.jsx)(a.code,{children:"stripBasePath"})," to ",(0,n.jsx)(a.code,{children:"/prod"}),"."]})}),"\n",(0,n.jsx)(a.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(a.p,{children:"To add support to AWS API Gateway V2 you do the following:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-ts",metastring:'title="index.ts"',children:"import { ServerlessAdapter } from '@h4ad/serverless-adapter';\r\nimport { ApiGatewayV2Adapter } from '@h4ad/serverless-adapter/adapters/aws';\r\nimport { DefaultHandler } from '@h4ad/serverless-adapter/handlers/default';\r\nimport app from './app';\r\n\r\nexport const handler = ServerlessAdapter.new(app)\r\n  .setHandler(new DefaultHandler())\r\n  // .setFramework(new ExpressFramework())\r\n  // .setResolver(new PromiseResolver())\r\n  .addAdapter(new ApiGatewayV2Adapter())\r\n  // customizing:\r\n  // .addAdapter(new ApiGatewayV2Adapter({ stripBasePath: '/prod' }))\r\n  .build();\n"})}),"\n",(0,n.jsx)(a.h3,{id:"transfer-encoding-chunked",children:"Transfer Encoding Chunked"}),"\n",(0,n.jsxs)(a.p,{children:["API Gateway V2 currently didn't support chunked transfer, so we throw an exception when you send the ",(0,n.jsx)(a.code,{children:"transfer-encoding=chunked"}),"."]}),"\n",(0,n.jsxs)(a.p,{children:["But, you can disable the exception by setting the ",(0,n.jsx)(a.code,{children:"throwOnChunkedTransfer"})," to ",(0,n.jsx)(a.code,{children:"false"})," in the ",(0,n.jsx)(a.a,{href:"/docs/api/Adapters/AWS/ApiGatewayV2Adapter/ApiGatewayV2Options",children:"ApiGatewayV2Options"}),"."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-ts",metastring:'title="index.ts"',children:"new ApiGatewayV1Adapter({ throwOnChunkedTransfer: false })\n"})}),"\n",(0,n.jsx)(a.p,{children:"The response body will be buffered without the special characters introduced by the chunked transfer keeping the body complete."})]})}function p(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>i,x:()=>o});var n=r(6540);const t={},s=n.createContext(t);function i(e){const a=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);