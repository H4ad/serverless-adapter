"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9559],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return h}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(r),h=a,m=d["".concat(c,".").concat(h)]||d[h]||u[h]||o;return r?n.createElement(m,s(s({ref:t},p),{},{components:r})):n.createElement(m,s({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8072:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),s=["components"],i={sidebar_position:2},c="Architecture",l={unversionedId:"main/architecture",id:"main/architecture",title:"Architecture",description:"The main purpose of this library is to allow the developer to add support for any cloud and as many event sources as he",source:"@site/docs/main/architecture.mdx",sourceDirName:"main",slug:"/main/architecture",permalink:"/serverless-adapter/docs/main/architecture",editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/main/architecture.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"main",previous:{title:"Introduction",permalink:"/serverless-adapter/docs/main/intro"},next:{title:"Getting Started",permalink:"/serverless-adapter/docs/category/getting-started"}},p={},u=[{value:"Framework",id:"framework",level:2},{value:"Handler",id:"handler",level:2},{value:"Resolver",id:"resolver",level:2},{value:"Adapter",id:"adapter",level:2}],d={toc:u};function h(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"architecture"},"Architecture"),(0,o.kt)("p",null,"The main purpose of this library is to allow the developer to add support for any cloud and as many event sources as he\nwants, without having to create an issue to request the feature or copy the library code because the library doesn't\nexpose good APIs for you to extend its functionality"),(0,o.kt)("p",null,"So I refactored ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/vendia/serverless-express"},"@vendia/serverless-express")," with 4 layers of abstraction:\nFramework, Handler, Resolver and Adapter."),(0,o.kt)("h2",{id:"framework"},"Framework"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/H4ad/serverless-adapter/tree/main/src/contracts/framework.contract.ts"},"FrameworkContract")," is responsible for forwarding\nto ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/api/http.html#class-httpincomingmessage"},"IncomingMessage"),"\nand ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/api/http.html#class-httpserverresponse"},"ServerResponse")," for your application instance."),(0,o.kt)("p",null,"With this abstraction you can implement any framework you want, they just need to accept both parameters and\ncall ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/api/http.html#class-httpserverresponse"},"end"),"\nin ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/api/http.html#class-httpserverresponse"},"ServerResponse"),", so the library knows when to continue\nand return the response."),(0,o.kt)("h2",{id:"handler"},"Handler"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/H4ad/serverless-adapter/tree/main/src/contracts/handler.contract.ts"},"HandlerContract")," is responsible to get the input from the serverless and then\nmanage to call each layer of abstraction to return a response."),(0,o.kt)("p",null,"With this abstraction, you can implement different ways\nto receive input from your serverless environment."),(0,o.kt)("p",null,"They usually have the same structure, but if you need to deal with a\nvery different cloud, you can use this abstraction to add support for that cloud."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Handler is a good choice for implementing (",(0,o.kt)("del",{parentName:"p"},"monsters"),") ways to receive input.\nFor example, we can create an http server as its handler to test our serverless code without having to launch the framework. Because? I don't know, but you can."))),(0,o.kt)("h2",{id:"resolver"},"Resolver"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/H4ad/serverless-adapter/tree/main/src/contracts/resolver.contract.ts"},"ResolverContract")," is responsible for waiting for the framework to handle the\nrequest and then returning the response to the cloud. Using AWS for example, you have three ways to wait for the\nresponse: returning a promise, calling the callback, and ",(0,o.kt)("del",{parentName:"p"},"using in-context methods"),", each option has its own benefits,\nbut generally the promise option will be the better because any good cloud provider will support promises."),(0,o.kt)("h2",{id:"adapter"},"Adapter"),(0,o.kt)("p",null,"Finally, the masterpiece of this library, the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/H4ad/serverless-adapter/tree/main/src/contracts/adapter.contract.ts"},"AdapterContract")," is responsible for\nhandling the received event, transforming the request in a way that your application can understand and then\ntransforming the response in a way your cloud can understand."),(0,o.kt)("p",null,"Well, with these four contracts, you'll be able to add support to any cloud that exists (no more excuses not to use\ncloud X with NodeJS)."))}h.isMDXComponent=!0}}]);