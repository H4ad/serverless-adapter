"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5885],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7727:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={title:"Http Function",description:"See more about how to integrate with DigitalOcean Functions"},i=void 0,s={unversionedId:"main/adapters/digital-ocean/http-function",id:"main/adapters/digital-ocean/http-function",title:"Http Function",description:"See more about how to integrate with DigitalOcean Functions",source:"@site/docs/main/adapters/digital-ocean/http-function.mdx",sourceDirName:"main/adapters/digital-ocean",slug:"/main/adapters/digital-ocean/http-function",permalink:"/docs/main/adapters/digital-ocean/http-function",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/main/adapters/digital-ocean/http-function.mdx",tags:[],version:"current",frontMatter:{title:"Http Function",description:"See more about how to integrate with DigitalOcean Functions"},sidebar:"main",previous:{title:"Digital Ocean",permalink:"/docs/category/digital-ocean"},next:{title:"Firebase",permalink:"/docs/main/adapters/firebase"}},p={},l=[{value:"Requirements",id:"requirements",level:2},{value:"About the adapter",id:"about-the-adapter",level:2},{value:"Customizing",id:"customizing",level:2},{value:"Usage",id:"usage",level:2},{value:"Examples",id:"examples",level:2}],c={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Attention",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"../../handlers/digital-ocean"},"DigitalOceanHandler")," docs to make sure you have all the necessary settings to work with this adapter.")),(0,r.kt)("p",null,"The adapter to handle requests from ",(0,r.kt)("a",{parentName:"p",href:"https://docs.digitalocean.com/products/functions/quickstart/sample-functions/"},"DigitalOcean Functions"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"When an error is thrown during forwarding and the ",(0,r.kt)("inlineCode",{parentName:"p"},"responseWithErrors")," option is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", we return a 500 status WITH error stack in the response.")),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,"When you work with DigitalOcean Functions, in the root of your repository you will have a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"project.yml")," which is used\nto determine the structure of your functions and will be used to deploy your code to DigitalOcean."),(0,r.kt)("p",null,"To this library understand the requests coming from DigitalOcean, you need to modify the default code of ",(0,r.kt)("inlineCode",{parentName:"p"},"project.yml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"packages:\n  - name: [name-of-your-api]\n    functions:\n      - name: 'prod'\n        main: ''\n        runtime: 'nodejs:18'\n-        web: true\n+        web: 'raw'\n")),(0,r.kt)("h2",{id:"about-the-adapter"},"About the adapter"),(0,r.kt)("p",null,"This adapter transforms every request coming from DigitalOcean Functions into an HTTP request to your framework."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="digital-ocean-http-function-event-example.json"',title:'"digital-ocean-http-function-event-example.json"'},'{\n  "__ow_method": "post",\n  "__ow_query": "potato=true",\n  "__ow_body": "{\\"test\\":true}",\n  "__ow_headers": {\n    "accept": "*/*",\n    "accept-encoding": "gzip",\n    "cdn-loop": "cloudflare",\n    "cf-connecting-ip": "45.444.444.444",\n    "cf-ipcountry": "BR",\n    "cf-ray": "xxxxxxxxxxx-GRU",\n    "cf-visitor": "{\\"scheme\\":\\"https\\"}",\n    "host": "ccontroller",\n    "user-agent": "insomnia/2022.4.2",\n    "x-custom": "potato",\n    "x-forwarded-for": "45.444.444.444",\n    "x-forwarded-proto": "https",\n    "x-request-id": "xxxxxxxxxxxxxxxx"\n  },\n  "__ow_path": "/store"\n}\n')),(0,r.kt)("p",null,"So, to add support to the above request, we must have registered the ",(0,r.kt)("inlineCode",{parentName:"p"},"/store")," route as ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," and when DigitalOcean sends this event, you will get:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"body"),": ",(0,r.kt)("inlineCode",{parentName:"li"},'{"test":true}')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"queryString"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"potato=true"))),(0,r.kt)("h2",{id:"customizing"},"Customizing"),(0,r.kt)("p",null,"You can strip base path with the option ",(0,r.kt)("inlineCode",{parentName:"p"},"stripBasePath")," inside ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/Adapters/Digital%20Ocean/HttpFunctionAdapter/HttpFunctionAdapterOptions"},"HttpFunctionAdapterOptions"),"."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You can configure this option based on your api base url like: ",(0,r.kt)("inlineCode",{parentName:"p"},"/api/test-serverless-adapter"),", then the request coming from ",(0,r.kt)("inlineCode",{parentName:"p"},"/api/test-serverless-adapter/events"),"\nwill be transformed into ",(0,r.kt)("inlineCode",{parentName:"p"},"/events"),".")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"To add support to DigitalOcean Functions you do the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"import { ServerlessAdapter } from '@h4ad/serverless-adapter';\nimport { DigitalOceanHandler } from '@h4ad/serverless-adapter/lib/handlers/digital-ocean';\nimport { PromiseResolver } from '@h4ad/serverless-adapter/lib/resolvers/promise';\nimport { HttpFunctionAdapter } from '@h4ad/serverless-adapter/lib/adapters/digital-ocean';\nimport app from './app';\n\nexport const main = ServerlessAdapter.new(app)\n  .setHandler(new DigitalOceanHandler())\n  .setResolver(new PromiseResolver())\n  // continue to set the other options here.\n  // .setFramework(new ExpressFramework())\n  .addAdapter(new HttpFunctionAdapter())\n  .build();\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"You can see examples of how to use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/H4ad/serverless-adapter-examples"},"here"),"."))}u.isMDXComponent=!0}}]);