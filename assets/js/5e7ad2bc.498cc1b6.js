"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4200],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),p=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(a),c=n,h=m["".concat(i,".").concat(c)]||m[c]||u[c]||s;return a?r.createElement(h,o(o({ref:t},d),{},{components:a})):r.createElement(h,o({ref:t},d))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,o=new Array(s);o[0]=c;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[m]="string"==typeof e?e:n,o[1]=l;for(var p=2;p<s;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4653:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const s={title:"AWS",description:"See more about how to integrate with AWS Lambda."},o=void 0,l={unversionedId:"main/handlers/aws",id:"main/handlers/aws",title:"AWS",description:"See more about how to integrate with AWS Lambda.",source:"@site/docs/main/handlers/aws.mdx",sourceDirName:"main/handlers",slug:"/main/handlers/aws",permalink:"/docs/main/handlers/aws",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/main/handlers/aws.mdx",tags:[],version:"current",frontMatter:{title:"AWS",description:"See more about how to integrate with AWS Lambda."},sidebar:"main",previous:{title:"Handlers",permalink:"/docs/category/handlers"},next:{title:"Azure",permalink:"/docs/main/handlers/azure"}},i={},p=[{value:"Usage",id:"usage",level:2},{value:"AWS Lambda Response Streaming",id:"aws-lambda-response-streaming",level:2},{value:"Can I use SQS and other services?",id:"can-i-use-sqs-and-other-services",level:3},{value:"Examples",id:"examples",level:2}],d={toc:p},m="wrapper";function u(e){let{components:t,...a}=e;return(0,n.kt)(m,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Don't know what a handler is? See the ",(0,n.kt)("a",{parentName:"p",href:"../architecture#handler"},"Architecture")," section.")),(0,n.kt)("p",null,"This is a serverless handler implementation that will return a function that expect to receive the following arguments: event, context and callback, respectively."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"function(event, context, callback) {...}\n")),(0,n.kt)("p",null,"If your cloud's serverless handler signature is the same, you can use this handler."),(0,n.kt)("p",null,"This is usually enough to add support for clouds like: AWS, Huawei and others."),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("p",null,"To use, you can import and call the method ",(0,n.kt)("a",{parentName:"p",href:"../../api/ServerlessAdapter#method-sethandler"},"setHandler"),", as per the code below:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"import { ServerlessAdapter } from '@h4ad/serverless-adapter';\nimport { DefaultHandler } from '@h4ad/serverless-adapter/lib/handlers/default';\nimport app from './app';\n\nexport const handler = ServerlessAdapter.new(app)\n  .setHandler(new DefaultHandler())\n  // continue to set the other options here.\n  //.setResolver(new PromiseResolver())\n  //.setFramework(new ExpressFramework())\n  //.addAdapter(new AlbAdapter())\n  //.addAdapter(new SQSAdapter())\n  //.addAdapter(new SNSAdapter())\n  // after put all methods necessary, just call the build method.\n  .build();\n")),(0,n.kt)("h2",{id:"aws-lambda-response-streaming"},"AWS Lambda Response Streaming"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"This handler is intended to be used when you integrate with ",(0,n.kt)("inlineCode",{parentName:"p"},"FunctionURLs"),", which is the only service that supports streaming on AWS currently,\n",(0,n.kt)("a",{parentName:"p",href:"https://aws.amazon.com/blogs/compute/introducing-aws-lambda-response-streaming/"},"read more"),".")),(0,n.kt)("p",null,"By default, every Lambda will be ",(0,n.kt)("inlineCode",{parentName:"p"},"BUFFERED"),", which means we need to wait for the framework to write all the content of the response until we send it to the user."),(0,n.kt)("p",null,"But when you enable the ",(0,n.kt)("inlineCode",{parentName:"p"},"RESPONSE_STREAM")," mode within your Lambda settings, the framework will send the response to the user as fast as possible, without waiting for the framework to write all the content."),(0,n.kt)("p",null,"To support this behavior, we need to change three things:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Instead of ",(0,n.kt)("inlineCode",{parentName:"li"},"DefaultHandler"),", you should use ",(0,n.kt)("a",{parentName:"li",href:"../../api/handlers/AwsStreamHandler"},"AwsStreamHandler"),"."),(0,n.kt)("li",{parentName:"ul"},"Instead of ",(0,n.kt)("inlineCode",{parentName:"li"},"PromiseResolver")," or whatever, you should use ",(0,n.kt)("a",{parentName:"li",href:"../../api/resolvers/DummyResolver"},"DummyResolver"),".",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Resolvers are not used in this mode, so you can just use this dummy version."))),(0,n.kt)("li",{parentName:"ul"},"Add the adapter ",(0,n.kt)("a",{parentName:"li",href:"../../api/adapters/aws/ApiGatewayV2Adapter"},"ApiGatewayV2Adapter"),".",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"It is required to handle function URLs, but you can add more if you wish.")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"import { ServerlessAdapter } from '@h4ad/serverless-adapter';\nimport { AwsStreamHandler } from '@h4ad/serverless-adapter/lib/handlers/aws';\nimport { DummyResolver } from '@h4ad/serverless-adapter/lib/resolvers/dummy';\nimport { ApiGatewayV2Adapter } from '@h4ad/serverless-adapter/lib/adapters/aws';\nimport app from './app';\n\nexport const handler = ServerlessAdapter.new(app)\n  .setHandler(new AwsStreamHandler())\n  .setResolver(new DummyResolver())\n  .setAdapter(new ApiGatewayV2Adapter())\n  // continue to set the other options here.\n  //.addAdapter(new AlbAdapter())\n  //.addAdapter(new SQSAdapter())\n  //.addAdapter(new SNSAdapter())\n  //.setFramework(new ExpressFramework())\n  // after put all methods necessary, just call the build method.\n  .build();\n")),(0,n.kt)("p",null,"As you see, we only have to change the ",(0,n.kt)("inlineCode",{parentName:"p"},"setHandler"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"setResolver")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"setAdapter")," methods, that's all!"),(0,n.kt)("h3",{id:"can-i-use-sqs-and-other-services"},"Can I use SQS and other services?"),(0,n.kt)("p",null,"Well, I don't know, but you can try. At least with ",(0,n.kt)("inlineCode",{parentName:"p"},"SQS")," I was able to get the messages, but I couldn't use the ",(0,n.kt)("inlineCode",{parentName:"p"},"partial batch response")," feature."),(0,n.kt)("p",null,"Other services may or may not work, at least if it's a service that doesn't need a response, maybe it works now."),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("p",null,"You can see examples of how to use ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/H4ad/serverless-adapter-examples"},"here"),"."))}u.isMDXComponent=!0}}]);