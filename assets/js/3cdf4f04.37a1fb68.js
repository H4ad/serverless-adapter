"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3867],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=c(r),u=a,g=d["".concat(p,".").concat(u)]||d[u]||y[u]||i;return r?n.createElement(g,s(s({ref:t},l),{},{components:r})):n.createElement(g,s({ref:t},l))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5998:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>y,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={},s=void 0,o={unversionedId:"api/Types/BinarySettings/BinarySettings",id:"api/Types/BinarySettings/BinarySettings",title:"BinarySettings",description:"@h4ad/serverless-adapter &gt; BinarySettings",source:"@site/docs/api/Types/BinarySettings/BinarySettings.md",sourceDirName:"api/Types/BinarySettings",slug:"/api/Types/BinarySettings/",permalink:"/serverless-adapter/docs/api/Types/BinarySettings/",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Types/BinarySettings/BinarySettings.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"ServerlessAdapter",permalink:"/serverless-adapter/docs/api/ServerlessAdapter/"},next:{title:"BinarySettingsContentHeaders",permalink:"/serverless-adapter/docs/api/Types/BinarySettings/BinarySettingsContentHeaders"}},p={},c=[{value:"(type) BinarySettings",id:"type-binarysettings",level:2},{value:"Remarks",id:"remarks",level:2}],l={toc:c};function y(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/api/Introduction"},"@h4ad/serverless-adapter")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/Types/BinarySettings"},"BinarySettings")),(0,a.kt)("h2",{id:"type-binarysettings"},"(type) BinarySettings"),(0,a.kt)("p",null,"The interface representing the settings for whether the response should be treated as binary or not"),(0,a.kt)("p",null,"Signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare type BinarySettings = BinarySettingsFunction | BinarySettingsContentHeaders;\n")),(0,a.kt)("p",null,"References: ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/Types/BinarySettings/BinarySettingsFunction"},"BinarySettingsFunction")," , ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/Types/BinarySettings/BinarySettingsContentHeaders"},"BinarySettingsContentHeaders")),(0,a.kt)("h2",{id:"remarks"},"Remarks"),(0,a.kt)("p",null,"Encoded as binary means the response body will be converted to base64"))}y.isMDXComponent=!0}}]);