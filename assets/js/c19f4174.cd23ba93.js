"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2593],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),c=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),u=n,h=m["".concat(i,".").concat(u)]||m[u]||d[u]||o;return r?a.createElement(h,s(s({ref:t},p),{},{components:r})):a.createElement(h,s({ref:t},p))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var c=2;c<o;c++)s[c]=r[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3617:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const o={title:"Callback",position:2,description:"See more about the Callback Resolver."},s=void 0,l={unversionedId:"main/resolvers/callback",id:"main/resolvers/callback",title:"Callback",description:"See more about the Callback Resolver.",source:"@site/docs/main/resolvers/callback.mdx",sourceDirName:"main/resolvers",slug:"/main/resolvers/callback",permalink:"/serverless-adapter/docs/main/resolvers/callback",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/main/resolvers/callback.mdx",tags:[],version:"current",frontMatter:{title:"Callback",position:2,description:"See more about the Callback Resolver."},sidebar:"main",previous:{title:"AWS Context",permalink:"/serverless-adapter/docs/main/resolvers/aws-context"},next:{title:"Promise",permalink:"/serverless-adapter/docs/main/resolvers/promise"}},i={},c=[],p={toc:c};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Don't know what a resolver is? See the ",(0,n.kt)("a",{parentName:"p",href:"../architecture#resolver"},"Architecture")," section.")),(0,n.kt)("p",null,"The best and most agnostic resolver (for sure) is using callback, generally every serverless environment supports callback as the third argument of the handler."),(0,n.kt)("p",null,"When the handler is created with ",(0,n.kt)("a",{parentName:"p",href:"../../api/Contracts/HandlerContract#method-gethandler"},"getHandler"),", it will return void\nand the cloud will wait until the event loop is empty.\nThis happens when your framework sends the response and the adapter transforms the response the way your cloud can handle,\nat this point the response will be passed to the callback and then the event loop will be empty."),(0,n.kt)("p",null,"You can use this resolver with any cloud, with any framework or any adapter."),(0,n.kt)("admonition",{title:"AWS",type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"To use this resolver on AWS, you MUST leave ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html"},"callbackWaitsForEmptyEventLoop")," as true, otherwise, AWS will not wait for this resolver to resolve.")),(0,n.kt)("h1",{id:"usage"},"Usage"),(0,n.kt)("p",null,"To use, you can import and call the method ",(0,n.kt)("a",{parentName:"p",href:"../../api/ServerlessAdapter#method-setresolver"},"setResolver"),", as per the code below:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"import { ServerlessAdapter } from '@h4ad/serverless-adapter';\nimport { CallbackResolver } from '@h4ad/serverless-adapter/lib/resolvers/callback';\n\nconst express = require('express');\n\nconst app = express();\nexport const handler = ServerlessAdapter.new(app)\n  .setResolver(new CallbackResolver())\n  // continue to set the other options here.\n  //.setFramework(new ExpressFramework())\n  //.setHandler(new DefaultHandler())\n  //.addAdapter(new AlbAdapter())\n  //.addAdapter(new SQSAdapter())\n  //.addAdapter(new SNSAdapter())\n  // after put all methods necessary, just call the build method.\n  .build();\n")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"To know more about how AWS deals with callback handlers, see ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/lambda/latest/dg/nodejs-handler.html"},"NodeJS Handler")," section.")))}d.isMDXComponent=!0}}]);