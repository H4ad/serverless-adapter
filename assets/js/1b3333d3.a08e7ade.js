"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4515],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),s=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(r),m=n,g=d["".concat(o,".").concat(m)]||d[m]||c[m]||l;return r?a.createElement(g,p(p({ref:t},u),{},{components:r})):a.createElement(g,p({ref:t},u))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,p=new Array(l);p[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[d]="string"==typeof e?e:n,p[1]=i;for(var s=2;s<l;s++)p[s]=r[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1370:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const l={},p=void 0,i={unversionedId:"api/Core/Headers/getMultiValueHeadersMap",id:"api/Core/Headers/getMultiValueHeadersMap",title:"getMultiValueHeadersMap",description:"@h4ad/serverless-adapter &gt; getMultiValueHeadersMap",source:"@site/docs/api/Core/Headers/getMultiValueHeadersMap.md",sourceDirName:"api/Core/Headers",slug:"/api/Core/Headers/getMultiValueHeadersMap",permalink:"/docs/api/Core/Headers/getMultiValueHeadersMap",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Core/Headers/getMultiValueHeadersMap.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"getFlattenedHeadersMap",permalink:"/docs/api/Core/Headers/getFlattenedHeadersMap"},next:{title:"parseHeaders",permalink:"/docs/api/Core/Headers/parseHeaders"}},o={},s=[{value:"(function) getMultiValueHeadersMap",id:"function-getmultivalueheadersmap",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:2}],u={toc:s},d="wrapper";function c(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/api/Introduction"},"@h4ad/serverless-adapter")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/Core/Headers/getMultiValueHeadersMap"},"getMultiValueHeadersMap")),(0,n.kt)("h2",{id:"function-getmultivalueheadersmap"},"(function) getMultiValueHeadersMap"),(0,n.kt)("p",null,"Transforms a header map into a multi-value map header."),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare function getMultiValueHeadersMap(headersMap: BothValueHeaders): Record<string, string[]>;\n")),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"headersMap"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/Types/BothValueHeaders"},"BothValueHeaders")),(0,n.kt)("td",{parentName:"tr",align:null},"The initial headers")))),(0,n.kt)("p",null,"Returns:"),(0,n.kt)("p",null,"Record","<","string, string","[","]",">"),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"const headers = { 'accept-encoding': 'gzip', 'connection': ['keep-alive'] };\nconst multiValueHeaders = getMultiValueHeadersMap(headers);\nconsole.log(multiValueHeaders);\n// { 'accept-encoding': ['gzip'], 'connection': ['keep-alive'] }\n")))}c.isMDXComponent=!0}}]);