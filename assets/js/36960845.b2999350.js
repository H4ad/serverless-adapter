"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5317],{8056:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var r=a(5893),n=a(1151);const s={},i=void 0,p={id:"api/Adapters/AWS/ApiGatewayV1Adapter/ApiGatewayV1Options",title:"ApiGatewayV1Options",description:"@h4ad/serverless-adapter &gt; ApiGatewayV1Options",source:"@site/docs/api/Adapters/AWS/ApiGatewayV1Adapter/ApiGatewayV1Options.md",sourceDirName:"api/Adapters/AWS/ApiGatewayV1Adapter",slug:"/api/Adapters/AWS/ApiGatewayV1Adapter/ApiGatewayV1Options",permalink:"/docs/api/Adapters/AWS/ApiGatewayV1Adapter/ApiGatewayV1Options",draft:!1,unlisted:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Adapters/AWS/ApiGatewayV1Adapter/ApiGatewayV1Options.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"ApiGatewayV1Adapter",permalink:"/docs/api/Adapters/AWS/ApiGatewayV1Adapter/"},next:{title:"ApiGatewayV2Adapter",permalink:"/docs/api/Adapters/AWS/ApiGatewayV2Adapter/"}},o={},d=[{value:"(interface) ApiGatewayV1Options",id:"interface-apigatewayv1options",level:2},{value:"(property) stripBasePath",id:"property-stripbasepath",level:2},{value:"(property) throwOnChunkedTransferEncoding",id:"property-throwonchunkedtransferencoding",level:2},{value:"Remarks",id:"remarks",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"/docs/api/Introduction",children:"@h4ad/serverless-adapter"})," > ",(0,r.jsx)(t.a,{href:"/docs/api/Adapters/AWS/ApiGatewayV1Adapter/ApiGatewayV1Options",children:"ApiGatewayV1Options"})]}),"\n",(0,r.jsx)(t.h2,{id:"interface-apigatewayv1options",children:"(interface) ApiGatewayV1Options"}),"\n",(0,r.jsxs)(t.p,{children:["The options to customize the ",(0,r.jsx)(t.a,{href:"/docs/api/Adapters/AWS/ApiGatewayV1Adapter",children:"ApiGatewayV1Adapter"})]}),"\n",(0,r.jsx)(t.p,{children:"Signature:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"export interface ApiGatewayV1Options \n"})}),"\n",(0,r.jsx)(t.h2,{id:"property-stripbasepath",children:"(property) stripBasePath"}),"\n",(0,r.jsx)(t.p,{children:"Strip base path for custom domains"}),"\n",(0,r.jsx)(t.p,{children:"Signature:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"stripBasePath?: string;\n"})}),"\n",(0,r.jsx)(t.h2,{id:"property-throwonchunkedtransferencoding",children:"(property) throwOnChunkedTransferEncoding"}),"\n",(0,r.jsxs)(t.p,{children:["Throw an exception when you send the ",(0,r.jsx)(t.code,{children:"transfer-encoding=chunked"})," , currently, API Gateway doesn't support chunked transfer. If this is set to ",(0,r.jsx)(t.code,{children:"false"})," , we will remove the ",(0,r.jsx)(t.code,{children:"transfer-encoding"})," header from the response and buffer the response body while we remove the special characters inserted by the chunked encoding."]}),"\n",(0,r.jsx)(t.p,{children:"Signature:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"throwOnChunkedTransferEncoding?: boolean;\n"})}),"\n",(0,r.jsx)(t.h2,{id:"remarks",children:"Remarks"}),"\n",(0,r.jsxs)(t.p,{children:["To learn more ",(0,r.jsx)(t.a,{href:"https://github.com/H4ad/serverless-adapter/issues/165",children:"https://github.com/H4ad/serverless-adapter/issues/165"})]})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>p,a:()=>i});var r=a(7294);const n={},s=r.createContext(n);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function p(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);