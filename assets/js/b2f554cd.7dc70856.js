"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"aws-lambda-response-streaming","metadata":{"permalink":"/blog/aws-lambda-response-streaming","editUrl":"https://github.com/H4ad/serverless-adapter/tree/main/www/blog/2023-04-28-aws-lambda-response-streaming.mdx","source":"@site/blog/2023-04-28-aws-lambda-response-streaming.mdx","title":"AWS Lambda Response Streaming","description":"A beautiful stream!","date":"2023-04-28T00:00:00.000Z","formattedDate":"April 28, 2023","tags":[{"label":"serverless-adapter","permalink":"/blog/tags/serverless-adapter"},{"label":"aws","permalink":"/blog/tags/aws"},{"label":"aws-lambda","permalink":"/blog/tags/aws-lambda"},{"label":"function-url","permalink":"/blog/tags/function-url"}],"readingTime":2.79,"hasTruncateMarker":false,"authors":[{"name":"Vin\xedcius Louren\xe7o","title":"Maintainer of Serverless Adapter","url":"https://github.com/h4ad","imageURL":"https://github.com/h4ad.png","key":"h4ad"}],"frontMatter":{"slug":"aws-lambda-response-streaming","title":"AWS Lambda Response Streaming","authors":["h4ad"],"tags":["serverless-adapter","aws","aws-lambda","function-url"],"image":"https://images.unsplash.com/photo-1527489377706-5bf97e608852"},"nextItem":{"title":"Updates and Releases","permalink":"/blog/updates-and-releases"}},"content":"![A beautiful stream!](https://images.unsplash.com/photo-1527489377706-5bf97e608852)\\n> Image by [Hendrik Cornelissen](https://unsplash.com/@the_bracketeer) on [Unsplash](https://unsplash.com)\\n\\nIt\'s been a long time since I wrote a post here, but I\'m happy to share this new announcement.\\n\\n## First, are you new to this library?\\n\\n![First time?](first-time-meme-first-time.gif)\\n\\nLet me introduce the library first, I named [Serverless Adapter](/docs/main/intro) because my goal is connect any serverless environment to any NodeJS framework.\\n\\nSo you could just plug your [framework](/docs/main/architecture#framework), use the correct [handler](/docs/main/architecture#handler) for your serverless environment,\\nchoose the [adapters](/docs/main/architecture#adapter) and then you can deploy your application!\\n\\n### What does this library support?\\n\\nCurrently, we support [8 NodeJS frameworks](/docs/category/frameworks): [Express](/docs/main/frameworks/express), [Fastify](/docs/main/frameworks/fastify), [tRPC](/docs/main/frameworks/trpc), [Apollo Server](/docs/main/frameworks/apollo-server), [NestJS](/docs/main/frameworks/nestjs), [Deepkit](/docs/main/frameworks/deepkit), [Koa](/docs/main/frameworks/koa) and [Hapi](/docs/main/frameworks/Hapi).\\n\\nWe also support [6 serverless environments](/docs/category/handlers): [AWS](/docs/main/handlers/aws), [Azure](/docs/main/handlers/azure), [Google Cloud](/docs/main/handlers/gcp), [Digital Ocean](/docs/main/handlers/digital-ocean), [Firebase](/docs/main/handlers/firebase) and [Huawei](/docs/main/handlers/huawei).\\n\\nTalking about AWS, we support [10 different services](/docs/category/aws) like API Gateway [V1](/docs/main/adapters/aws/api-gateway-v1) and [V2](/docs/main/adapters/aws/api-gateway-v2), [SQS](/docs/main/adapters/aws/sqs), [SNS](/docs/main/adapters/aws/sns), etc... and you can combine them to use the same codebase and lambda to handle them all.\\n\\n:::tip\\nTo learn understand the power of this composability, check this article I wrote about how I went [From a million invocations to a thousand with correct caching](https://viniciusl.com.br/posts/2022/12/08-from-million-invocations-to-thousand-with-correct-caching/).\\n:::\\n\\nBut okay, enough self-marketing, let\'s get to the main point of this article.\\n\\n## AWS Lambda Response Streaming\\n\\nToday I\'m rolling out support for [AWS Lambda Streaming Response](https://aws.amazon.com/blogs/compute/introducing-aws-lambda-response-streaming/) using [AwsStreamHandler](/docs/main/handlers/aws#aws-lambda-response-streaming).\\n\\nIf you already use this library, just change [DefaultHandler](/docs/main/handlers/aws#usage) to [AwsStreamHandler](/docs/main/handlers/aws#aws-lambda-response-streaming), and make sure you\'re using [DummyResolver](/docs/api/Resolvers/DummyResolver) and [ApiGatewayV2Adapter](/docs/main/adapters/aws/api-gateway-v2):\\n\\n```ts title=\\"index.ts\\"\\nimport { ServerlessAdapter } from \'@h4ad/serverless-adapter\';\\nimport { AwsStreamHandler } from \'@h4ad/serverless-adapter/lib/handlers/aws\';\\nimport { DummyResolver } from \'@h4ad/serverless-adapter/lib/resolvers/dummy\';\\nimport { ApiGatewayV2Adapter } from \'@h4ad/serverless-adapter/lib/adapters/aws\';\\nimport app from \'./app\';\\n\\nexport const handler = ServerlessAdapter.new(app)\\n// .setHandler(new DefaultHandler())\\n   .setHandler(new AwsStreamHandler())\\n   .setResolver(new DummyResolver())\\n   .setAdapter(new ApiGatewayV2Adapter())\\n   // more options...\\n   //.setFramework(new ExpressFramework())\\n   .build();\\n```\\n\\n> Despite its name, `ApiGatewayV2Adapter` can be used to support API Gateway V2 and function URLs.\\n\\n:::caution\\nResponse streaming currently is only available for Function URLs.\\n:::\\n\\nThat\'s it :) Now you can use Function URLs and stream your content to the world!\\n\\n:::information\\nDon\'t forget to enable the feature in your AWS Lambda function by changing `BUFFERED` TO `RESPONSE_STREAM.`\\n:::\\n\\n### I NEED CODE!!!\\n\\nWell, if you\'re the type of person who, like me, needs to see the code working, here\'s a repository with several example projects using this library:\\n[serverless-adapter-examples](https://github.com/H4ad/serverless-adapter-examples).\\n\\n## Beyond HTTP Requests\\n\\nFurthermore, not only can you receive HTTP requests using `Function URLs`, but you can combine your `SQS` queue and use the same codebase to process everything.\\n\\nI haven\'t spent a lot of time testing it, but so far, any AWS service that supports this library can be hooked up to your Lambda function with `RESPONSE_STREAM` enabled.\\n\\nThe only thing you need to know is: the answer didn\'t work as expected, I couldn\'t get the [SQS Partial Response](/docs/main/adapters/aws/sqs#batch-item-failures) to work for example .\\n\\nBut you can give it a try anyway, share your results with me on [twitter](https://twitter.com/vinii_joga10) and I\'ll be happy to help if I can.\\n\\n## Conclusion\\n\\nWell, I don\'t have much to say, but I hope you enjoy this new feature and use it to build amazing things.\\n\\nI\'ve spent the last 3 weeks trying to figure out how to make this work and I\'m happy with the result.\\n\\nIf you\'re curious enough to learn more about how I implement it, you can see [this PR](https://github.com/H4ad/serverless-adapter/pull/90) with all my struggles and thoughts over the weeks."},{"id":"updates-and-releases","metadata":{"permalink":"/blog/updates-and-releases","editUrl":"https://github.com/H4ad/serverless-adapter/tree/main/www/blog/2022-07-17-updates-and-releases.mdx","source":"@site/blog/2022-07-17-updates-and-releases.mdx","title":"Updates and Releases","description":"To the moon!","date":"2022-07-17T00:00:00.000Z","formattedDate":"July 17, 2022","tags":[{"label":"serverless-adapter","permalink":"/blog/tags/serverless-adapter"},{"label":"trpc","permalink":"/blog/tags/trpc"},{"label":"azure","permalink":"/blog/tags/azure"},{"label":"firebase","permalink":"/blog/tags/firebase"}],"readingTime":1.83,"hasTruncateMarker":false,"authors":[{"name":"Vin\xedcius Louren\xe7o","title":"Maintainer of Serverless Adapter","url":"https://github.com/h4ad","imageURL":"https://github.com/h4ad.png","key":"h4ad"}],"frontMatter":{"slug":"updates-and-releases","title":"Updates and Releases","authors":["h4ad"],"tags":["serverless-adapter","trpc","azure","firebase"],"image":"https://images.unsplash.com/photo-1636819488524-1f019c4e1c44"},"prevItem":{"title":"AWS Lambda Response Streaming","permalink":"/blog/aws-lambda-response-streaming"},"nextItem":{"title":"The Beginning","permalink":"/blog/the-beginning"}},"content":"import BrowserWindow from \'@site/src/components/BrowserWindow\';\\n\\n![To the moon!](https://images.unsplash.com/photo-1636819488524-1f019c4e1c44)\\n\\nNow we have more Handlers, Frameworks and Adapters, let\'s see what\'s new.\\n\\n> From [v2.3.2](https://github.com/H4ad/serverless-adapter/tree/v2.3.2) to [v2.6.0](https://github.com/H4ad/serverless-adapter/tree/v2.6.0),\\ncompare the changes [here](https://github.com/H4ad/serverless-adapter/compare/v2.3.2...v2.6.0).\\n\\n## Changes\\n\\n42 commits, 6905 lines added, 601 lines deleted, that\'s the size of the changes since [The Beginning](/blog/the-beginning).\\n\\nI\'m very proud of how things are going, I learned a lot by studying to implement these new things.\\n\\nBut, let\'s learn what\'s new in all these releases.\\n\\n## Azure and Firebase\\n\\nYou can now use this library to deploy your apps to [Azure Functions](https://docs.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-node)\\nand [Firebase Functions](https://firebase.google.com/docs/functions/http-events).\\n\\nMore specifically, you can integrate with Http Trigger V4 on Azure and Http Events on Firebase.\\n\\nThese integrations are just to open the door of possibilities, in the future I want to add support for more triggers in these clouds.\\n\\nCheck out the [Azure](/docs/main/handlers/azure) and [Firebase](/docs/main/handlers/firebase) docs for how to integrate.\\n\\nI also added examples for the cloud in the [serverless-adapter-examples](https://github.com/H4ad/serverless-adapter-examples) repository.\\n\\n## tRPC\\n\\n<BrowserWindow url=\\"https://trpc.io/docs/\\">\\n  tRPC allows you to easily build & consume fully typesafe APIs, without schemas or code generation.\\n</BrowserWindow>\\n\\ntRPC is a framework that brings a new way of thinking about APIs, instead of REST or GraphQL, you can build typesafe APIs and easily\\ncan integrate with the client, seems to be very promising.\\n\\nSo now you can deploy applications developed with tRPC to any cloud that this library supports, have a look at [docs](/docs/main/frameworks/trpc)\\nto learn more about how to use it.\\n\\n## That\'s all folks!\\n\\nI have two more weeks to work in this library without worrying because I\'m on vacation at the university,\\nso probably my next efforts will be to bring more articles to this blog to show the full power of this library.\\n\\nGiving some spoilers for those of you that make it this far, I\'ll start by showing you the benefits of using AWS Lambda integrated with\\nAPI Gateway and SQS, I used it in a project of my company and I managed to reduce a lot of stress on the database and now\\nwe are able to process 500k votes in minutes without spending 15% CPU using a PostgreSQL database on a t2.micro instance.\\n\\nThat\'s all for today, thank you!"},{"id":"the-beginning","metadata":{"permalink":"/blog/the-beginning","editUrl":"https://github.com/H4ad/serverless-adapter/tree/main/www/blog/2022-06-17-the-beginning.mdx","source":"@site/blog/2022-06-17-the-beginning.mdx","title":"The Beginning","description":"Hello, welcome to my new library to help you integrate your API with the serverless world.","date":"2022-06-17T00:00:00.000Z","formattedDate":"June 17, 2022","tags":[{"label":"serverless-adapter","permalink":"/blog/tags/serverless-adapter"}],"readingTime":1.89,"hasTruncateMarker":false,"authors":[{"name":"Vin\xedcius Louren\xe7o","title":"Maintainer of Serverless Adapter","url":"https://github.com/h4ad","imageURL":"https://github.com/h4ad.png","key":"h4ad"}],"frontMatter":{"slug":"the-beginning","title":"The Beginning","authors":["h4ad"],"tags":["serverless-adapter"]},"prevItem":{"title":"Updates and Releases","permalink":"/blog/updates-and-releases"}},"content":"Hello, welcome to my new library to help you integrate your API with the serverless world.\\n\\n## The development\\n\\nIt took me almost 5 months to build this library, refactoring was easy and testing was challenging, but documenting this library was the hardest part.\\n\\nIt took me almost 2 weeks to refactor [@vendia/serverless-express](https://github.com/vendia/serverless-express),\\nabout 1 and a half month to create tests with 99% coverage and the rest of the time I spent creating documentation for this library.\\n\\nI currently added support for:\\n\\n- AWS\\n  - [AWS Load Balancer](https://docs.aws.amazon.com/lambda/latest/dg/services-alb.html) by using ([AlbAdapter](/docs/main/adapters/aws/alb))\\n  - [AWS Api Gateway V1](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html) by using ([ApiGatewayV1Adapter](/docs/main/adapters/aws/api-gateway-v1))\\n  - [AWS Api Gateway V2](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html) by using ([ApiGatewayV2Adapter](/docs/main/adapters/aws/api-gateway-v2))\\n  - [AWS DynamoDB](https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html) by using ([DynamoDBAdapter](/docs/main/adapters/aws/dynamodb))\\n  - [AWS Event Bridge / CloudWatch Events](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudwatchevents.html) by using ([EventBridgeAdapter](/docs/main/adapters/aws/event-bridge))\\n  - [AWS Lambda Edge](https://docs.aws.amazon.com/lambda/latest/dg/lambda-edge.html) by using ([LambdaEdgeAdapter](/docs/main/adapters/aws/lambda-edge))\\n  - [AWS SNS](https://docs.aws.amazon.com/lambda/latest/dg/with-sns.html) by using ([SNSAdapter](/docs/main/adapters/aws/sns))\\n  - [AWS SQS](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html) by using ([SQSAdapter](/docs/main/adapters/aws/sqs))\\n- Huawei\\n  - [Http Function](https://support.huaweicloud.com/intl/en-us/usermanual-functiongraph/functiongraph_01_1442.html): Look [this section](/docs/main/handlers/huawei#http-function).\\n  - [Event Function](https://support.huaweicloud.com/intl/en-us/usermanual-functiongraph/functiongraph_01_1441.html): Look [this section](/docs/main/handlers/huawei#event-function).\\n    - [Api Gateway](https://support.huaweicloud.com/intl/en-us/devg-functiongraph/functiongraph_02_0102.html#functiongraph_02_0102__li5178638110137) by using ([HuaweiApiGatewayAdapter](/docs/main/adapters/huawei/huawei-api-gateway)).\\n\\nBut it\'s just the beginning, I\'m going to build more adapters to integrate with as much of the cloud as possible, just to be able to deploy my APIs on any cloud.\\n\\n## About me\\n\\nI am a student at [Facens](https://facens.br/) university and I work for [Liga](https://liga.facens.br/), which is a sector within Facens that develops applications, websites, games and much more fun stuff.\\n\\nI currently work on this library only in my spare time and I need to balance my Final Theses and my overtime projects so it was very challenging but I am happy with the end result of this library.\\n\\n## Inspiration\\n\\nThis library was originally created to help my company reduce costs with AWS SQS, but it has since turned into something I can spend my time developing and learning English because I\'m not a native speaker (as typing problems might suggest) writing all the documentation in English.\\n## Credits\\n\\nI need to thank [@vendia](https://vendia.net/) for developing [@vendia/serverless-express](https://github.com/vendia/serverless-express), all logic and code I finished to refactor from the code I read on serverless-express.\\nI also have many thanks to [Chaguri](https://github.com/guichaguri), [Liga](https://liga.facens.br/) and many other people who gave me time and insights to create this library.\\n\\n## You can use it right now!\\n\\nSee the [Introduction](/docs/main/intro) section to know more about the library."}]}')}}]);