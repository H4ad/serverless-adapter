"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6380],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>g});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=a.createContext({}),s=function(e){var r=a.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=s(e.components);return a.createElement(p.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(t),d=n,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return t?a.createElement(g,i(i({ref:r},c),{},{components:t})):a.createElement(g,i({ref:r},c))}));function g(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4391:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(7462),n=(t(7294),t(3905));const o={},i=void 0,l={unversionedId:"api/Core/Path/getQueryParamsStringFromRecord",id:"api/Core/Path/getQueryParamsStringFromRecord",title:"getQueryParamsStringFromRecord",description:"@h4ad/serverless-adapter &gt; getQueryParamsStringFromRecord",source:"@site/docs/api/Core/Path/getQueryParamsStringFromRecord.md",sourceDirName:"api/Core/Path",slug:"/api/Core/Path/getQueryParamsStringFromRecord",permalink:"/docs/api/Core/Path/getQueryParamsStringFromRecord",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Core/Path/getQueryParamsStringFromRecord.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"getPathWithQueryStringParams",permalink:"/docs/api/Core/Path/getPathWithQueryStringParams"},next:{title:"isStreamEnded",permalink:"/docs/api/Core/Stream/isStreamEnded"}},p={},s=[{value:"(function) getQueryParamsStringFromRecord",id:"function-getqueryparamsstringfromrecord",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:2}],c={toc:s},u="wrapper";function m(e){let{components:r,...t}=e;return(0,n.kt)(u,(0,a.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/api/Introduction"},"@h4ad/serverless-adapter")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/Core/Path/getQueryParamsStringFromRecord"},"getQueryParamsStringFromRecord")),(0,n.kt)("h2",{id:"function-getqueryparamsstringfromrecord"},"(function) getQueryParamsStringFromRecord"),(0,n.kt)("p",null,"Map query params to a string with formatted query params"),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare function getQueryParamsStringFromRecord(queryParamsRecord: Record<string, string | string[] | undefined> | undefined | null): string;\n")),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"queryParamsRecord"),(0,n.kt)("td",{parentName:"tr",align:null},"Record","<","string, string ","|"," string","[","]"," ","|"," undefined",">"," ","|"," undefined ","|"," null"),(0,n.kt)("td",{parentName:"tr",align:null},"The query params record")))),(0,n.kt)("p",null,"Returns:"),(0,n.kt)("p",null,"string"),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"const queryParams = { batata: undefined, petType: [ 'dog', 'fish' ] };\nconst result = getQueryParamsStringFromRecord(queryParams);\nconsole.log(result);\n// batata=&petType=dog&petType=fish\n")))}m.isMDXComponent=!0}}]);