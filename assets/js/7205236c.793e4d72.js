"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4457],{2246:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=t(4848),r=t(8453);const s={},o=void 0,a={id:"api/Core/isBinary/isContentEncodingBinary",title:"isContentEncodingBinary",description:"@h4ad/serverless-adapter &gt; isContentEncodingBinary",source:"@site/docs/api/Core/isBinary/isContentEncodingBinary.md",sourceDirName:"api/Core/isBinary",slug:"/api/Core/isBinary/isContentEncodingBinary",permalink:"/docs/api/Core/isBinary/isContentEncodingBinary",draft:!1,unlisted:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Core/isBinary/isContentEncodingBinary.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"getContentType",permalink:"/docs/api/Core/isBinary/getContentType"},next:{title:"isContentTypeBinary",permalink:"/docs/api/Core/isBinary/isContentTypeBinary"}},d={},c=[{value:"(function) isContentEncodingBinary",id:"function-iscontentencodingbinary",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/api/Introduction",children:"@h4ad/serverless-adapter"})," > ",(0,i.jsx)(n.a,{href:"/docs/api/Core/isBinary/isContentEncodingBinary",children:"isContentEncodingBinary"})]}),"\n",(0,i.jsx)(n.h2,{id:"function-iscontentencodingbinary",children:"(function) isContentEncodingBinary"}),"\n",(0,i.jsx)(n.p,{children:"The function that determines by the content encoding whether the response should be treated as binary"}),"\n",(0,i.jsx)(n.p,{children:"Signature:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export declare function isContentEncodingBinary(headers: BothValueHeaders, binaryEncodingTypes: string[]): boolean;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"headers"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/docs/api/Types/BothValueHeaders",children:"BothValueHeaders"})}),(0,i.jsx)(n.td,{children:"The headers of the response"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"binaryEncodingTypes"}),(0,i.jsx)(n.td,{children:"string[]"}),(0,i.jsx)(n.td,{children:"The list of content encodings that will be treated as binary"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Returns:"}),"\n",(0,i.jsx)(n.p,{children:"boolean"}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const headers = \\{ 'content-encoding': 'gzip' };\r\nconst isBinary = isContentEncodingBinary(headers, ['gzip']);\r\nconsole.log(isBinary);\r\n// true\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);