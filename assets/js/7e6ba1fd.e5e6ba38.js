"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1433],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>g});var a=r(7294);function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,p=function(e,t){if(null==e)return{};var r,a,p={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(p[r]=e[r]);return p}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(p[r]=e[r])}return p}var i=a.createContext({}),d=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=d(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,p=e.mdxType,n=e.originalType,i=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=d(r),m=p,g=u["".concat(i,".").concat(m)]||u[m]||c[m]||n;return r?a.createElement(g,s(s({ref:t},l),{},{components:r})):a.createElement(g,s({ref:t},l))}));function g(e,t){var r=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var n=r.length,s=new Array(n);s[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[u]="string"==typeof e?e:p,s[1]=o;for(var d=2;d<n;d++)s[d]=r[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2791:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var a=r(7462),p=(r(7294),r(3905));const n={},s=void 0,o={unversionedId:"api/Adapters/AWS/RequestLambdaEdgeAdapter/RequestLambdaEdgeAdapterOptions",id:"api/Adapters/AWS/RequestLambdaEdgeAdapter/RequestLambdaEdgeAdapterOptions",title:"RequestLambdaEdgeAdapterOptions",description:"@h4ad/serverless-adapter &gt; RequestLambdaEdgeAdapterOptions",source:"@site/docs/api/Adapters/AWS/RequestLambdaEdgeAdapter/RequestLambdaEdgeAdapterOptions.md",sourceDirName:"api/Adapters/AWS/RequestLambdaEdgeAdapter",slug:"/api/Adapters/AWS/RequestLambdaEdgeAdapter/RequestLambdaEdgeAdapterOptions",permalink:"/docs/api/Adapters/AWS/RequestLambdaEdgeAdapter/RequestLambdaEdgeAdapterOptions",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Adapters/AWS/RequestLambdaEdgeAdapter/RequestLambdaEdgeAdapterOptions.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"RequestLambdaEdgeAdapter",permalink:"/docs/api/Adapters/AWS/RequestLambdaEdgeAdapter/"},next:{title:"S3Adapter",permalink:"/docs/api/Adapters/AWS/S3Adapter/"}},i={},d=[{value:"(interface) RequestLambdaEdgeAdapterOptions",id:"interface-requestlambdaedgeadapteroptions",level:2},{value:"(property) disallowedHeaders",id:"property-disallowedheaders",level:2},{value:"Remarks",id:"remarks",level:2},{value:"(property) onResponseSizeExceedLimit",id:"property-onresponsesizeexceedlimit",level:2},{value:"(property) originMaxResponseSizeInBytes",id:"property-originmaxresponsesizeinbytes",level:2},{value:"(property) shouldStripHeader",id:"property-shouldstripheader",level:2},{value:"(property) stripBasePath",id:"property-stripbasepath",level:2},{value:"(property) viewerMaxResponseSizeInBytes",id:"property-viewermaxresponsesizeinbytes",level:2}],l={toc:d},u="wrapper";function c(e){let{components:t,...r}=e;return(0,p.kt)(u,(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/docs/api/Introduction"},"@h4ad/serverless-adapter")," ",">"," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/Adapters/AWS/RequestLambdaEdgeAdapter/RequestLambdaEdgeAdapterOptions"},"RequestLambdaEdgeAdapterOptions")),(0,p.kt)("h2",{id:"interface-requestlambdaedgeadapteroptions"},"(interface) RequestLambdaEdgeAdapterOptions"),(0,p.kt)("p",null,"The options to customize the ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/Adapters/AWS/RequestLambdaEdgeAdapter"},"RequestLambdaEdgeAdapter")," ."),(0,p.kt)("p",null,"Signature:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface RequestLambdaEdgeAdapterOptions \n")),(0,p.kt)("h2",{id:"property-disallowedheaders"},"(property) disallowedHeaders"),(0,p.kt)("p",null,"The headers that will be stripped from the headers object because Lambda @ edge will fail if these headers are passed in the response."),(0,p.kt)("p",null,"Signature:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-typescript"},"disallowedHeaders?: (string | RegExp)[];\n")),(0,p.kt)("h2",{id:"remarks"},"Remarks"),(0,p.kt)("p",null,"All headers will be compared with other headers using toLowerCase, but for the RegExp, if you modify this list, you must put the flag ",(0,p.kt)("inlineCode",{parentName:"p"},"/gmi")," at the end of the RegExp (ex: ",(0,p.kt)("inlineCode",{parentName:"p"},"/(X-Amz-Cf-)(.*)/gim")," )"),(0,p.kt)("h2",{id:"property-onresponsesizeexceedlimit"},"(property) onResponseSizeExceedLimit"),(0,p.kt)("p",null,"The function called when the response size exceed the max limits of the Lambda @ edge"),(0,p.kt)("p",null,"Signature:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-typescript"},"onResponseSizeExceedLimit?: (response: CloudFrontRequestResult) => CloudFrontRequestResult;\n")),(0,p.kt)("h2",{id:"property-originmaxresponsesizeinbytes"},"(property) originMaxResponseSizeInBytes"),(0,p.kt)("p",null,"The max response size in bytes of origin request and origin response."),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html"},"Reference")),(0,p.kt)("p",null,"Signature:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-typescript"},"originMaxResponseSizeInBytes?: number;\n")),(0,p.kt)("h2",{id:"property-shouldstripheader"},"(property) shouldStripHeader"),(0,p.kt)("p",null,"If you want to change how we check against the header if it should be stripped, you can pass a function to this property."),(0,p.kt)("p",null,"Signature:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-typescript"},"shouldStripHeader?: (header: string) => boolean;\n")),(0,p.kt)("h2",{id:"property-stripbasepath"},"(property) stripBasePath"),(0,p.kt)("p",null,"Strip base path for custom paths, like ",(0,p.kt)("inlineCode",{parentName:"p"},"/api")," ."),(0,p.kt)("p",null,"Signature:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-typescript"},"stripBasePath?: string;\n")),(0,p.kt)("h2",{id:"property-viewermaxresponsesizeinbytes"},"(property) viewerMaxResponseSizeInBytes"),(0,p.kt)("p",null,"The max response size in bytes of viewer request and viewer response."),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html"},"Reference")),(0,p.kt)("p",null,"Signature:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-typescript"},"viewerMaxResponseSizeInBytes?: number;\n")))}c.isMDXComponent=!0}}]);