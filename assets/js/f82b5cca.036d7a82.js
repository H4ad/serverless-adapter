"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5913],{9491:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var n=r(4848),s=r(8453);const a={title:"Firebase",description:"See more about how to integrate with Firebase Functions."},i=void 0,o={id:"main/handlers/firebase",title:"Firebase",description:"See more about how to integrate with Firebase Functions.",source:"@site/docs/main/handlers/firebase.mdx",sourceDirName:"main/handlers",slug:"/main/handlers/firebase",permalink:"/docs/main/handlers/firebase",draft:!1,unlisted:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/main/handlers/firebase.mdx",tags:[],version:"current",frontMatter:{title:"Firebase",description:"See more about how to integrate with Firebase Functions."},sidebar:"main",previous:{title:"Digital Ocean",permalink:"/docs/main/handlers/digital-ocean"},next:{title:"Google Cloud Functions",permalink:"/docs/main/handlers/gcp"}},d={},l=[{value:"Requirements",id:"requirements",level:2},{value:"V1 and V2",id:"v1-and-v2",level:2},{value:"Integrating with Http Events",id:"integrating-with-http-events",level:2},{value:"What about Cron, Pub/Sub, etc?",id:"what-about-cron-pubsub-etc",level:2},{value:"Examples",id:"examples",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsxs)(t.p,{children:["Don't know what a handler is? See the ",(0,n.jsx)(t.a,{href:"../architecture#handler",children:"Architecture"})," section."]})}),"\n",(0,n.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,n.jsx)(t.p,{children:"First, install the types for this adapter:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"npm i --save firebase-functions firebase-admin\n"})}),"\n",(0,n.jsx)(t.h2,{id:"v1-and-v2",children:"V1 and V2"}),"\n",(0,n.jsxs)(t.p,{children:["If you want to use Firebase Functions V1, use ",(0,n.jsx)(t.a,{href:"../../api/Handlers/HttpFirebaseHandler",children:"HttpFirebaseHandler"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["But if you want to add support for V2, then use ",(0,n.jsx)(t.a,{href:"../../api/Handlers/HttpFirebaseHandler/HttpFirebaseV2Handler",children:"HttpFirebaseV2Handler"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"integrating-with-http-events",children:"Integrating with Http Events"}),"\n",(0,n.jsxs)(t.p,{children:["To use, you can import ",(0,n.jsx)(t.a,{href:"../../api/Handlers/HttpFirebaseHandler/HttpFirebaseV2Handler",children:"HttpFirebaseV2Handler"})," and call the method ",(0,n.jsx)(t.a,{href:"../../api/ServerlessAdapter#method-sethandler",children:"setHandler"}),", as per the code below:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="index.ts"',children:"import { ServerlessAdapter } from '@h4ad/serverless-adapter';\nimport { DummyAdapter } from '@h4ad/serverless-adapter/adapters/dummy';\nimport { HttpFirebaseV2Handler } from '@h4ad/serverless-adapter/handlers/firebase';\nimport { DummyResolver } from '@h4ad/serverless-adapter/resolvers/dummy';\nimport app from './app';\n\nexport const helloWorld = ServerlessAdapter.new(app)\n  .setHandler(new HttpFirebaseV2Handler({\n    // you can pass custom properties here, like: concurrency.\n  }))\n  .setResolver(new DummyResolver())\n  // choose the framework of your app\n  // .setFramework(new ExpressFramework())\n  .addAdapter(new DummyAdapter())\n  .build();\n\n// you can export more than one if you want\nexport const test = ServerlessAdapter.new(app)\n  .setHandler(new HttpFirebaseV2Handler())\n  .setResolver(new DummyResolver())\n  // choose the framework of your app\n  // .setFramework(new ExpressFramework())\n  .addAdapter(new DummyAdapter())\n  .build();\n"})}),"\n",(0,n.jsx)(t.admonition,{title:"About Resolver and Adapter",type:"info",children:(0,n.jsxs)(t.p,{children:["You should use ",(0,n.jsx)(t.code,{children:"DummyResolver"})," and ",(0,n.jsx)(t.code,{children:"DummyAdapter"})," because it's a requirement for the library, but ",(0,n.jsx)(t.code,{children:"HttpFirebaseV2Handler"})," doesn't do anything with them,\nso you use those dummy versions just to satisfy the library requirements."]})}),"\n",(0,n.jsx)(t.h2,{id:"what-about-cron-pubsub-etc",children:"What about Cron, Pub/Sub, etc?"}),"\n",(0,n.jsx)(t.p,{children:"I could not think yet in an API to handle those cases well,\nso currently I didn't add support to these type of Firebase Functions."}),"\n",(0,n.jsxs)(t.p,{children:["If you have some idea about a design for those APIs, ",(0,n.jsx)(t.a,{href:"https://github.com/H4ad/serverless-adapter/issues/new/choose",children:"create an issue"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsxs)(t.p,{children:["You can see examples of how to use ",(0,n.jsx)(t.a,{href:"https://github.com/H4ad/serverless-adapter-examples",children:"here"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var n=r(6540);const s={},a=n.createContext(s);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);