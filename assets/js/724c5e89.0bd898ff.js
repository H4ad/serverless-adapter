"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6569],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>u});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(t),u=o,h=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return t?n.createElement(h,s(s({ref:r},c),{},{components:t})):n.createElement(h,s({ref:r},c))}));function u(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=d;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8489:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=t(7462),o=(t(7294),t(3905));const a={title:"Promise",position:1,description:"See more about the Promise Resolver."},s=void 0,i={unversionedId:"main/resolvers/promise",id:"main/resolvers/promise",title:"Promise",description:"See more about the Promise Resolver.",source:"@site/docs/main/resolvers/promise.mdx",sourceDirName:"main/resolvers",slug:"/main/resolvers/promise",permalink:"/serverless-adapter/docs/main/resolvers/promise",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/main/resolvers/promise.mdx",tags:[],version:"current",frontMatter:{title:"Promise",position:1,description:"See more about the Promise Resolver."},sidebar:"main",previous:{title:"Callback",permalink:"/serverless-adapter/docs/main/resolvers/callback"},next:{title:"Frameworks",permalink:"/serverless-adapter/docs/category/frameworks"}},l={},p=[],c={toc:p};function m(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Don't know what a resolver is? See the ",(0,o.kt)("a",{parentName:"p",href:"../architecture#resolver"},"Architecture")," section.")),(0,o.kt)("p",null,"The best and most agnostic resolver is using promise, generally every serverless environment supports asynchronous handlers."),(0,o.kt)("p",null,"When the handler is created with ",(0,o.kt)("a",{parentName:"p",href:"../../api/Contracts/HandlerContract#method-gethandler"},"getHandler"),", it will return an promise\nwhich is resolved when your framework send the response and the adapter transform the response in the way of your cloud can handle."),(0,o.kt)("p",null,"You can use this resolver with any cloud (except Huawei), with any framework or any adapter."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Only Huawei doesn't support Promise, or it was buggy in my time, so I suggest you use ",(0,o.kt)("a",{parentName:"p",href:"./callback"},"Callback Resolver"),".")),(0,o.kt)("h1",{id:"usage"},"Usage"),(0,o.kt)("p",null,"To use, you can import and call the method ",(0,o.kt)("a",{parentName:"p",href:"../../api/ServerlessAdapter#method-setresolver"},"setResolver"),", as per the code below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"import { ServerlessAdapter } from '@h4ad/serverless-adapter';\nimport { PromiseResolver } from '@h4ad/serverless-adapter/lib/resolvers/promise';\n\nconst express = require('express');\n\nconst app = express();\nexport const handler = ServerlessAdapter.new(app)\n  .setResolver(new PromiseResolver())\n  // continue to set the other options here.\n  //.setFramework(new ExpressFramework())\n  //.setHandler(new DefaultHandler())\n  //.addAdapter(new AlbAdapter())\n  //.addAdapter(new SQSAdapter())\n  //.addAdapter(new SNSAdapter())\n  // after put all methods necessary, just call the build method.\n  .build();\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"To know more about how AWS deals with async handlers, see ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/lambda/latest/dg/nodejs-handler.html"},"NodeJS Handler")," section.")))}m.isMDXComponent=!0}}]);