"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2982],{3767:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var t=i(5893),a=i(1151);const s={title:"Digital Ocean",description:"See more about how to integrate with DigitalOcean Functions."},o=void 0,r={id:"main/handlers/digital-ocean",title:"Digital Ocean",description:"See more about how to integrate with DigitalOcean Functions.",source:"@site/docs/main/handlers/digital-ocean.mdx",sourceDirName:"main/handlers",slug:"/main/handlers/digital-ocean",permalink:"/docs/main/handlers/digital-ocean",draft:!1,unlisted:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/main/handlers/digital-ocean.mdx",tags:[],version:"current",frontMatter:{title:"Digital Ocean",description:"See more about how to integrate with DigitalOcean Functions."},sidebar:"main",previous:{title:"Azure",permalink:"/docs/main/handlers/azure"},next:{title:"Firebase",permalink:"/docs/main/handlers/firebase"}},l={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Integrating with Existing API",id:"integrating-with-existing-api",level:2},{value:"Examples",id:"examples",level:2}];function c(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Don't know what a handler is? See the ",(0,t.jsx)(n.a,{href:"../architecture#handler",children:"Architecture"})," section."]})}),"\n",(0,t.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,t.jsxs)(n.p,{children:["When you work with DigitalOcean Functions, in the root of your repository you will have a file called ",(0,t.jsx)(n.code,{children:"project.yml"})," which is used\nto determine the structure of your functions and will be used to deploy your code to DigitalOcean."]}),"\n",(0,t.jsxs)(n.p,{children:["To this library understand the requests coming from DigitalOcean, you need to modify the default code of ",(0,t.jsx)(n.code,{children:"project.yml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-diff",children:"packages:\n  - name: [name-of-your-api]\n    functions:\n      - name: 'prod'\n        main: ''\n        runtime: 'nodejs:18'\n-        web: true\n+        web: 'raw'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Also, you will need ",(0,t.jsx)(n.code,{children:"doctl"}),", the DigitalOcean CLI, see ",(0,t.jsx)(n.a,{href:"https://docs.digitalocean.com/reference/doctl/how-to/install/",children:"how to install"})," before proceeding."]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["Import and call the method ",(0,t.jsx)(n.a,{href:"../../api/ServerlessAdapter#method-sethandler",children:"setHandler"}),", as per the code below:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="index.ts"',children:"import { ServerlessAdapter } from '@h4ad/serverless-adapter';\nimport { DigitalOceanHandler } from '@h4ad/serverless-adapter/lib/handlers/digital-ocean';\nimport { PromiseResolver } from '@h4ad/serverless-adapter/lib/resolvers/promise';\nimport { HttpFunctionAdapter } from '@h4ad/serverless-adapter/lib/adapters/digital-ocean';\nimport app from './app';\n\nexport const main = ServerlessAdapter.new(app)\n  .setHandler(new DigitalOceanHandler())\n  .setResolver(new PromiseResolver())\n  // continue to set the other options here.\n  // .setFramework(new ExpressFramework())\n  .addAdapter(new HttpFunctionAdapter())\n  .build();\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Be careful when exporting the handler because in DigitalOcean you must ",(0,t.jsx)(n.code,{children:"export const main"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"integrating-with-existing-api",children:"Integrating with Existing API"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"This configuration is meant to be used for one API/function only, if you want to have multiple APIs and functions inside\nin the same repository, you can skip this section."})}),"\n",(0,t.jsx)(n.p,{children:"So, let's assume you're a good developer and like to follow best practices, and your api's folder structure looks like this:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"package.json"}),"\n",(0,t.jsx)(n.li,{children:"package-lock.json"}),"\n",(0,t.jsx)(n.li,{children:"tsconfig.json"}),"\n",(0,t.jsxs)(n.li,{children:["src","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"index.ts"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The first thing we need to do is create the ",(0,t.jsx)(n.code,{children:"packages"})," folder and the ",(0,t.jsx)(n.code,{children:"function"})," folder for the DigitalOcean:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["packages","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"[name-of-your-package]"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"api"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Change ",(0,t.jsx)(n.code,{children:"[name-of-your-package]"})," to your project name, like: ",(0,t.jsx)(n.code,{children:"joe-book-store"}),". In the final, DigitalOcean will create a DNS as\n",(0,t.jsx)(n.code,{children:"https://faas-nyc1-<id>.doserverless.co/api/v1/web/<namespace>/joe-book-store/api"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Okay, with the folders created, let's create a file called ",(0,t.jsx)(n.code,{children:".include"})," inside the ",(0,t.jsx)(n.code,{children:"api"})," folder with the following content:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",metastring:'title=".include"',children:"deploy.zip\n"})}),"\n",(0,t.jsxs)(n.p,{children:["By default, ",(0,t.jsx)(n.code,{children:"doctl"})," which is DigitalOcean CLI already packs your code inside ",(0,t.jsx)(n.code,{children:"packages/[your-package-name]/api"}),", but I want to have a better configuration and use my own library,\n",(0,t.jsx)(n.a,{href:"https://github.com/H4ad/node-modules-packer",children:"node-modules-packer"})," which packs all the code faster than running ",(0,t.jsx)(n.code,{children:"doctl"})," and also can minify your code."]}),"\n",(0,t.jsxs)(n.p,{children:["Okay, after configure ",(0,t.jsx)(n.code,{children:".include"}),", let's modify your ",(0,t.jsx)(n.code,{children:"project.yml"})," to be able to deploy your API:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-diff",metastring:'title="project.yml"',children:"packages:\n  - name: [name-of-your-package]\n    functions:\n      - name: 'api'\n-       main: ''\n+       main: 'dist/index.main' # if you put the code of ServerlessAdapter in different file, you should change here.\n        runtime: 'nodejs:18'\n-       web: true\n+       web: 'raw'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Finally, let's now add some scripts to be able to deploy our code using ",(0,t.jsx)(n.a,{href:"https://github.com/H4ad/node-modules-packer",children:"node-modules-packer"}),", inside ",(0,t.jsx)(n.code,{children:"package.json"}),", add these scripts:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="package.json"',children:'"zip": "npx @h4ad/node-modules-packer ./ --include dist --output-path packages/[name-of-your-package]/prod",\n"update-function": "doctl serverless deploy .",\n"deploy": "npm run build && npm run zip && npm run update-function"\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["If you want to know more configurations of node-modules-packer, see ",(0,t.jsx)(n.a,{href:"https://github.com/H4ad/node-modules-packer#examples",children:"here"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["To deploy, just run ",(0,t.jsx)(n.code,{children:"npm run deploy"})," and that's it! Your API will be available for you to use."]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(n.p,{children:["You can see examples of how to use ",(0,t.jsx)(n.a,{href:"https://github.com/H4ad/serverless-adapter-examples",children:"here"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>o});var t=i(7294);const a={},s=t.createContext(a);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);