"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4457],{2246:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=i(4848),t=i(8453);const s={},o=void 0,a={id:"api/Core/isBinary/isContentEncodingBinary",title:"isContentEncodingBinary",description:"@h4ad/serverless-adapter &gt; isContentEncodingBinary",source:"@site/docs/api/Core/isBinary/isContentEncodingBinary.md",sourceDirName:"api/Core/isBinary",slug:"/api/Core/isBinary/isContentEncodingBinary",permalink:"/docs/api/Core/isBinary/isContentEncodingBinary",draft:!1,unlisted:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Core/isBinary/isContentEncodingBinary.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"getContentType",permalink:"/docs/api/Core/isBinary/getContentType"},next:{title:"isContentTypeBinary",permalink:"/docs/api/Core/isBinary/isContentTypeBinary"}},c={},d=[{value:"(function) isContentEncodingBinary",id:"function-iscontentencodingbinary",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:2}];function l(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.a,{href:"/docs/api/Introduction",children:"@h4ad/serverless-adapter"})," > ",(0,r.jsx)(e.a,{href:"/docs/api/Core/isBinary/isContentEncodingBinary",children:"isContentEncodingBinary"})]}),"\n",(0,r.jsx)(e.h2,{id:"function-iscontentencodingbinary",children:"(function) isContentEncodingBinary"}),"\n",(0,r.jsx)(e.p,{children:"The function that determines by the content encoding whether the response should be treated as binary"}),"\n",(0,r.jsx)(e.p,{children:"Signature:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"export declare function isContentEncodingBinary(headers: BothValueHeaders, binaryEncodingTypes: string[]): boolean;\n"})}),"\n",(0,r.jsx)(e.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:(0,r.jsx)(e.p,{children:"Parameter"})}),(0,r.jsx)("th",{children:(0,r.jsx)(e.p,{children:"Type"})}),(0,r.jsx)("th",{children:(0,r.jsx)(e.p,{children:"Description"})})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)(e.p,{children:"headers"})}),(0,r.jsx)("td",{children:(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"/docs/api/Types/BothValueHeaders",children:"BothValueHeaders"})})}),(0,r.jsx)("td",{children:(0,r.jsx)(e.p,{children:"The headers of the response"})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)(e.p,{children:"binaryEncodingTypes"})}),(0,r.jsx)("td",{children:(0,r.jsx)(e.p,{children:"string[]"})}),(0,r.jsx)("td",{children:(0,r.jsx)(e.p,{children:"The list of content encodings that will be treated as binary"})})]})]})]}),"\n",(0,r.jsx)(e.p,{children:"Returns:"}),"\n",(0,r.jsx)(e.p,{children:"boolean"}),"\n",(0,r.jsx)(e.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"const headers = \\{ 'content-encoding': 'gzip' };\r\nconst isBinary = isContentEncodingBinary(headers, ['gzip']);\r\nconsole.log(isBinary);\r\n// true\n"})})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>a});var r=i(6540);const t={},s=r.createContext(t);function o(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);