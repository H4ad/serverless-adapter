"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5919],{5065:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=n(5893),t=n(1151);const s={title:"Api Gateway V1",description:"See more about how to integrate with AWS API Gateway V1."},i=void 0,o={id:"main/adapters/aws/api-gateway-v1",title:"Api Gateway V1",description:"See more about how to integrate with AWS API Gateway V1.",source:"@site/docs/main/adapters/aws/api-gateway-v1.mdx",sourceDirName:"main/adapters/aws",slug:"/main/adapters/aws/api-gateway-v1",permalink:"/docs/main/adapters/aws/api-gateway-v1",draft:!1,unlisted:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/main/adapters/aws/api-gateway-v1.mdx",tags:[],version:"current",frontMatter:{title:"Api Gateway V1",description:"See more about how to integrate with AWS API Gateway V1."},sidebar:"main",previous:{title:"ALB",permalink:"/docs/main/adapters/aws/alb"},next:{title:"Api Gateway V2",permalink:"/docs/main/adapters/aws/api-gateway-v2"}},d={},l=[{value:"About the adapter",id:"about-the-adapter",level:2},{value:"Customizing",id:"customizing",level:2},{value:"Usage",id:"usage",level:2},{value:"Transfer Encoding Chunked",id:"transfer-encoding-chunked",level:3}];function c(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(r.p,{children:["The adapter to handle requests from ",(0,a.jsx)(r.a,{href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html",children:"AWS Api Gateway V1"}),"."]}),"\n",(0,a.jsx)(r.admonition,{type:"info",children:(0,a.jsxs)(r.p,{children:["When an error is thrown during forwarding and the ",(0,a.jsx)(r.code,{children:"responseWithErrors"})," option is ",(0,a.jsx)(r.code,{children:"true"}),", we return a 500 status WITH error stack in the response."]})}),"\n",(0,a.jsx)(r.admonition,{title:"Reducing Costs",type:"tip",children:(0,a.jsxs)(r.p,{children:["Not sure when to use AWS ALB instead of API Gateway? See ",(0,a.jsx)(r.a,{href:"https://serverless-training.com/articles/save-money-by-replaceing-api-gateway-with-application-load-balancer/",children:"this article"})," from Serverless Training to learn more."]})}),"\n",(0,a.jsx)(r.h2,{id:"about-the-adapter",children:"About the adapter"}),"\n",(0,a.jsx)(r.p,{children:"This adapter turns every request coming from API Gateway V1 into an HTTP request to your framework."}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",metastring:'title="api-gateway-v1-event-example.json"',children:'{\r\n  "version": "1.0",\r\n  "resource": "/my/path",\r\n  "path": "/my/path",\r\n  "httpMethod": "GET",\r\n  "headers": {\r\n    "header1": "value1",\r\n    "header2": "value2"\r\n  },\r\n  "multiValueHeaders": {\r\n    "header1": [\r\n      "value1"\r\n    ],\r\n    "header2": [\r\n      "value1",\r\n      "value2"\r\n    ]\r\n  },\r\n  "queryStringParameters": {\r\n    "parameter1": "value1",\r\n    "parameter2": "value"\r\n  },\r\n  "multiValueQueryStringParameters": {\r\n    "parameter1": [\r\n      "value1",\r\n      "value2"\r\n    ],\r\n    "parameter2": [\r\n      "value"\r\n    ]\r\n  },\r\n  "requestContext": {\r\n    "accountId": "123456789012",\r\n    "apiId": "id",\r\n    "authorizer": {\r\n      "claims": null,\r\n      "scopes": null\r\n    },\r\n    "domainName": "id.execute-api.us-east-1.amazonaws.com",\r\n    "domainPrefix": "id",\r\n    "extendedRequestId": "request-id",\r\n    "httpMethod": "GET",\r\n    "identity": {\r\n      "accessKey": null,\r\n      "accountId": null,\r\n      "caller": null,\r\n      "cognitoAuthenticationProvider": null,\r\n      "cognitoAuthenticationType": null,\r\n      "cognitoIdentityId": null,\r\n      "cognitoIdentityPoolId": null,\r\n      "principalOrgId": null,\r\n      "sourceIp": "IP",\r\n      "user": null,\r\n      "userAgent": "user-agent",\r\n      "userArn": null,\r\n      "clientCert": {\r\n        "clientCertPem": "CERT_CONTENT",\r\n        "subjectDN": "www.example.com",\r\n        "issuerDN": "Example issuer",\r\n        "serialNumber": "a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1",\r\n        "validity": {\r\n          "notBefore": "May 28 12:30:02 2019 GMT",\r\n          "notAfter": "Aug  5 09:36:04 2021 GMT"\r\n        }\r\n      }\r\n    },\r\n    "path": "/my/path",\r\n    "protocol": "HTTP/1.1",\r\n    "requestId": "id=",\r\n    "requestTime": "04/Mar/2020:19:15:17 +0000",\r\n    "requestTimeEpoch": 1583349317135,\r\n    "resourceId": null,\r\n    "resourcePath": "/my/path",\r\n    "stage": "$default"\r\n  },\r\n  "pathParameters": null,\r\n  "stageVariables": null,\r\n  "body": "Hello from Lambda!",\r\n  "isBase64Encoded": false\r\n}\n'})}),"\n",(0,a.jsxs)(r.p,{children:["So, to add support to the above request, we must have registered the ",(0,a.jsx)(r.code,{children:"/my/path"})," route as ",(0,a.jsx)(r.code,{children:"POST"})," and when API Gateway sends this event, you will get:"]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"body"}),": ",(0,a.jsx)(r.code,{children:"Hello from Lambda"})]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"queryString"}),": ",(0,a.jsx)(r.code,{children:"parameter1=value1&parameter1=value2&parameter2=value"})]}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"customizing",children:"Customizing"}),"\n",(0,a.jsxs)(r.p,{children:["You can remove some base path with the ",(0,a.jsx)(r.code,{children:"stripBasePath"})," option inside ",(0,a.jsx)(r.a,{href:"/docs/api/Adapters/AWS/ApiGatewayV1Adapter/ApiGatewayV1Options",children:"ApiGatewayV1Options"}),"."]}),"\n",(0,a.jsx)(r.admonition,{type:"caution",children:(0,a.jsxs)(r.p,{children:["When you configure your API with some ",(0,a.jsx)(r.code,{children:"basePath"})," like ",(0,a.jsx)(r.code,{children:"/prod"}),", you should either send the request in the path ",(0,a.jsx)(r.code,{children:"/prod/my/path"})," or set ",(0,a.jsx)(r.code,{children:"stripBasePath"})," to ",(0,a.jsx)(r.code,{children:"/prod"}),"."]})}),"\n",(0,a.jsxs)(r.p,{children:["You can also ensure request headers are lowercase like the default behavior of Node.js ",(0,a.jsx)(r.code,{children:"http"})," module by setting the ",(0,a.jsx)(r.code,{children:"lowercaseRequestHeaders"})," option to ",(0,a.jsx)(r.code,{children:"true"}),"."]}),"\n",(0,a.jsx)(r.admonition,{type:"caution",children:(0,a.jsx)(r.p,{children:"ApiGateway may already be ensuring your headers are lowercase but it may be worth confirming in your own system as many libraries in the Node.js ecosystem will assume this lowercasing."})}),"\n",(0,a.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(r.p,{children:"To add support to AWS API Gateway V1 you do the following:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",metastring:'title="index.ts"',children:"import { ServerlessAdapter } from '@h4ad/serverless-adapter';\r\nimport { ApiGatewayV1Adapter } from '@h4ad/serverless-adapter/adapters/aws';\r\nimport { DefaultHandler } from '@h4ad/serverless-adapter/handlers/default';\r\nimport app from './app';\r\n\r\nexport const handler = ServerlessAdapter.new(app)\r\n  .setHandler(new DefaultHandler())\r\n  // .setFramework(new ExpressFramework())\r\n  // .setResolver(new PromiseResolver())\r\n  .addAdapter(new ApiGatewayV1Adapter())\r\n  // customizing:\r\n  // .addAdapter(new ApiGatewayV1Adapter({ stripBasePath: '/prod' }))\r\n  .build();\n"})}),"\n",(0,a.jsx)(r.h3,{id:"transfer-encoding-chunked",children:"Transfer Encoding Chunked"}),"\n",(0,a.jsxs)(r.p,{children:["API Gateway V1 currently didn't support chunked transfer, so we throw an exception when you send the ",(0,a.jsx)(r.code,{children:"transfer-encoding=chunked"}),"."]}),"\n",(0,a.jsxs)(r.p,{children:["But, you can disable the exception by setting the ",(0,a.jsx)(r.code,{children:"throwOnChunkedTransfer"})," to ",(0,a.jsx)(r.code,{children:"false"})," in the ",(0,a.jsx)(r.a,{href:"/docs/api/Adapters/AWS/ApiGatewayV1Adapter/ApiGatewayV1Options",children:"ApiGatewayV1Options"}),"."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",metastring:'title="index.ts"',children:"new ApiGatewayV1Adapter({ throwOnChunkedTransfer: false })\n"})}),"\n",(0,a.jsx)(r.p,{children:"The response body will be buffered without the special characters introduced by the chunked transfer keeping the body complete."})]})}function p(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},1151:(e,r,n)=>{n.d(r,{Z:()=>o,a:()=>i});var a=n(7294);const t={},s=a.createContext(t);function i(e){const r=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(s.Provider,{value:r},e.children)}}}]);