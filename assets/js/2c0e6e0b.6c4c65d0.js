"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7887],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},p=Object.keys(e);for(a=0;a<p.length;a++)r=p[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)r=p[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),d=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=d(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,p=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=d(r),c=n,h=u["".concat(i,".").concat(c)]||u[c]||m[c]||p;return r?a.createElement(h,o(o({ref:t},l),{},{components:r})):a.createElement(h,o({ref:t},l))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=r.length,o=new Array(p);o[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:n,o[1]=s;for(var d=2;d<p;d++)o[d]=r[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},6317:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>p,metadata:()=>s,toc:()=>d});var a=r(7462),n=(r(7294),r(3905));const p={},o=void 0,s={unversionedId:"api/Adapters/AWS/LambdaEdgeAdapter/LambdaEdgeAdapterOptions",id:"api/Adapters/AWS/LambdaEdgeAdapter/LambdaEdgeAdapterOptions",title:"LambdaEdgeAdapterOptions",description:"@h4ad/serverless-adapter &gt; LambdaEdgeAdapterOptions",source:"@site/docs/api/Adapters/AWS/LambdaEdgeAdapter/LambdaEdgeAdapterOptions.md",sourceDirName:"api/Adapters/AWS/LambdaEdgeAdapter",slug:"/api/Adapters/AWS/LambdaEdgeAdapter/LambdaEdgeAdapterOptions",permalink:"/docs/api/Adapters/AWS/LambdaEdgeAdapter/LambdaEdgeAdapterOptions",draft:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Adapters/AWS/LambdaEdgeAdapter/LambdaEdgeAdapterOptions.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"DefaultQueryString",permalink:"/docs/api/Adapters/AWS/LambdaEdgeAdapter/DefaultQueryString"},next:{title:"NewLambdaEdgeBody",permalink:"/docs/api/Adapters/AWS/LambdaEdgeAdapter/NewLambdaEdgeBody"}},i={},d=[{value:"(interface) LambdaEdgeAdapterOptions",id:"interface-lambdaedgeadapteroptions",level:2},{value:"(property) disallowedHeaders",id:"property-disallowedheaders",level:2},{value:"Remarks",id:"remarks",level:2},{value:"(property) getPathFromEvent",id:"property-getpathfromevent",level:2},{value:"Remarks",id:"remarks-1",level:2},{value:"(property) onResponseSizeExceedLimit",id:"property-onresponsesizeexceedlimit",level:2},{value:"(property) originMaxResponseSizeInBytes",id:"property-originmaxresponsesizeinbytes",level:2},{value:"(property) shouldStripHeader",id:"property-shouldstripheader",level:2},{value:"(property) shouldUseHeadersFromFramework",id:"property-shoulduseheadersfromframework",level:2},{value:"(property) viewerMaxResponseSizeInBytes",id:"property-viewermaxresponsesizeinbytes",level:2}],l={toc:d},u="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/api/Introduction"},"@h4ad/serverless-adapter")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/Adapters/AWS/LambdaEdgeAdapter/LambdaEdgeAdapterOptions"},"LambdaEdgeAdapterOptions")),(0,n.kt)("h2",{id:"interface-lambdaedgeadapteroptions"},"(interface) LambdaEdgeAdapterOptions"),(0,n.kt)("p",null,"The options to customize the ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/Adapters/AWS/LambdaEdgeAdapter"},"LambdaEdgeAdapter")," ."),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface LambdaEdgeAdapterOptions \n")),(0,n.kt)("h2",{id:"property-disallowedheaders"},"(property) disallowedHeaders"),(0,n.kt)("p",null,"The headers that will be stripped from the headers object because Lambda @ edge will fail if these headers are passed in the response."),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"disallowedHeaders?: (string | RegExp)[];\n")),(0,n.kt)("h2",{id:"remarks"},"Remarks"),(0,n.kt)("p",null,"All headers will be compared with other headers using toLowerCase, but for the RegExp, if you modify this list, you must put the flag ",(0,n.kt)("inlineCode",{parentName:"p"},"/gmi")," at the end of the RegExp (ex: ",(0,n.kt)("inlineCode",{parentName:"p"},"/(X-Amz-Cf-)(.*)/gim")," )"),(0,n.kt)("h2",{id:"property-getpathfromevent"},"(property) getPathFromEvent"),(0,n.kt)("p",null,"Return the path to be used to create a request to the framework"),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"getPathFromEvent?: (event: CloudFrontRequestEvent['Records'][number]) => string;\n")),(0,n.kt)("h2",{id:"remarks-1"},"Remarks"),(0,n.kt)("p",null,"You MUST append the query params from ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/Adapters/AWS/LambdaEdgeAdapter/DefaultQueryString"},"DefaultQueryString")," , you can use the helper ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/Core/Path/getPathWithQueryStringParams"},"getPathWithQueryStringParams()")," ."),(0,n.kt)("h2",{id:"property-onresponsesizeexceedlimit"},"(property) onResponseSizeExceedLimit"),(0,n.kt)("p",null,"The function called when the response size exceed the max limits of the Lambda @ edge"),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"onResponseSizeExceedLimit?: (response: CloudFrontRequestResult) => CloudFrontRequestResult;\n")),(0,n.kt)("h2",{id:"property-originmaxresponsesizeinbytes"},"(property) originMaxResponseSizeInBytes"),(0,n.kt)("p",null,"The max response size in bytes of origin request and origin response."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html"},"Reference")),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"originMaxResponseSizeInBytes?: number;\n")),(0,n.kt)("h2",{id:"property-shouldstripheader"},"(property) shouldStripHeader"),(0,n.kt)("p",null,"If you want to change how we check against the header if it should be stripped, you can pass a function to this property."),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"shouldStripHeader?: (header: string) => boolean;\n")),(0,n.kt)("h2",{id:"property-shoulduseheadersfromframework"},"(property) shouldUseHeadersFromFramework"),(0,n.kt)("p",null,"By default, the  has the ",(0,n.kt)("inlineCode",{parentName:"p"},"headers")," property, but we also have the headers sent by the framework too. So this setting tells us how to handle this case, if you pass ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," to this property, we will use the framework headers. Otherwise, we will forward the body back to cloudfront without modifying or trying to set the ",(0,n.kt)("inlineCode",{parentName:"p"},"headers")," property inside ."),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"shouldUseHeadersFromFramework?: boolean;\n")),(0,n.kt)("h2",{id:"property-viewermaxresponsesizeinbytes"},"(property) viewerMaxResponseSizeInBytes"),(0,n.kt)("p",null,"The max response size in bytes of viewer request and viewer response."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html"},"Reference")),(0,n.kt)("p",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"viewerMaxResponseSizeInBytes?: number;\n")))}m.isMDXComponent=!0}}]);