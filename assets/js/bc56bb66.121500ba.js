"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9379],{4934:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=t(4848),i=t(8453);const s={},a=void 0,o={id:"api/Core/isBinary/isBinary",title:"isBinary",description:"@h4ad/serverless-adapter &gt; isBinary",source:"@site/docs/api/Core/isBinary/isBinary.md",sourceDirName:"api/Core/isBinary",slug:"/api/Core/isBinary/",permalink:"/docs/api/Core/isBinary/",draft:!1,unlisted:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Core/isBinary/isBinary.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"getEventBodyAsBuffer",permalink:"/docs/api/Core/getEventBodyAsBuffer"},next:{title:"getContentType",permalink:"/docs/api/Core/isBinary/getContentType"}},d={},c=[{value:"(function) isBinary",id:"function-isbinary",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/api/Introduction",children:"@h4ad/serverless-adapter"})," > ",(0,r.jsx)(n.a,{href:"/docs/api/Core/isBinary",children:"isBinary"})]}),"\n",(0,r.jsx)(n.h2,{id:"function-isbinary",children:"(function) isBinary"}),"\n",(0,r.jsx)(n.p,{children:"The function used to determine from the headers and the binary settings if a response should be encoded or not"}),"\n",(0,r.jsx)(n.p,{children:"Signature:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"export declare function isBinary(headers: BothValueHeaders, binarySettings: BinarySettings): boolean;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"headers"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/api/Types/BothValueHeaders",children:"BothValueHeaders"})}),(0,r.jsx)(n.td,{children:"The headers of the response"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"binarySettings"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/api/Types/BinarySettings",children:"BinarySettings"})}),(0,r.jsx)(n.td,{children:"The settings for the validation"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Returns:"}),"\n",(0,r.jsx)(n.p,{children:"boolean"}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const headers = \\{ 'content-type': 'image/png', 'content-encoding': 'gzip' };\r\nconst isContentBinary = isBinary(headers, \\{ contentEncodings: ['gzip'], contentTypes: ['image/png'] });\r\nconsole.log(isContentBinary);\r\n// true\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);