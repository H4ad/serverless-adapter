"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2327],{5654:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var i=t(4848),r=t(8453);const s={},a=void 0,o={id:"api/Types/BinarySettings/BinarySettingsFunction",title:"BinarySettingsFunction",description:"@h4ad/serverless-adapter &gt; BinarySettingsFunction",source:"@site/docs/api/Types/BinarySettings/BinarySettingsFunction.md",sourceDirName:"api/Types/BinarySettings",slug:"/api/Types/BinarySettings/BinarySettingsFunction",permalink:"/docs/api/Types/BinarySettings/BinarySettingsFunction",draft:!1,unlisted:!1,editUrl:"https://github.com/H4ad/serverless-adapter/tree/main/www/docs/api/Types/BinarySettings/BinarySettingsFunction.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"BinarySettingsContentHeaders",permalink:"/docs/api/Types/BinarySettings/BinarySettingsContentHeaders"},next:{title:"BothValueHeaders",permalink:"/docs/api/Types/BothValueHeaders"}},c={},p=[{value:"(interface) BinarySettingsFunction",id:"interface-binarysettingsfunction",level:2},{value:"(property) isBinary",id:"property-isbinary",level:2},{value:"Remarks",id:"remarks",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/api/Introduction",children:"@h4ad/serverless-adapter"})," > ",(0,i.jsx)(n.a,{href:"/docs/api/Types/BinarySettings/BinarySettingsFunction",children:"BinarySettingsFunction"})]}),"\n",(0,i.jsx)(n.h2,{id:"interface-binarysettingsfunction",children:"(interface) BinarySettingsFunction"}),"\n",(0,i.jsx)(n.p,{children:"The interface representing the binary settings implementation by function"}),"\n",(0,i.jsx)(n.p,{children:"Signature:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export interface BinarySettingsFunction \n"})}),"\n",(0,i.jsx)(n.h2,{id:"property-isbinary",children:"(property) isBinary"}),"\n",(0,i.jsxs)(n.p,{children:["This property can be a function that receives the response headers and returns whether that response should be encoded as binary. Otherwise, you can specify not to treat any response as binary by putting ",(0,i.jsx)(n.code,{children:"false"})," in this property."]}),"\n",(0,i.jsx)(n.p,{children:"Signature:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"isBinary: ((headers: Record<string, string | string[] | undefined>) => boolean) | false;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,i.jsxs)(n.p,{children:["Setting this property prevents the ",(0,i.jsx)(n.code,{children:"contentTypes"})," and ",(0,i.jsx)(n.code,{children:"contentEncodings"})," properties from being used."]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);